/* REBAR 2.3 */
/* COPYRIGHT TOAST STUDIO */

/* SETUP */
	/* FONTS */
		@font-face {
			font-family: "Open Dyslexic Regular";
			src: url("fonts/OpenDyslexic3-Regular.ttf");
		}
		
		@font-face {
			font-family: "Open Dyslexic Bold";
			src: url("fonts/OpenDyslexic3-Bold.ttf");
		}
		
		@font-face {
			font-family: "Atkinson Regular";
			src: url("fonts/atkinson-regular.ttf");
		}
		
		@font-face {
			font-family: "Atkinson Bold";
			src: url("fonts/atkinson-bold.ttf");
		}
		
		@font-face {
			font-family: "Product Sans Regular";
			src: url("fonts/product-sans-regular.ttf");
		}
		
		@font-face {
			font-family: "Product Sans Bold";
			src: url("fonts/product-sans-bold.ttf");
		}
		
		@font-face {
			font-family: "Segoe UI";
			src: url("fonts/SegoeUI-VF.ttf");
		}
		
		@font-face {
			font-family: "Shantell Sans";
			src: url("fonts/ShantellSans.ttf");
		}
		
		@font-face {
			font-family: "SF Pro";
			src: url("fonts/SF-Pro.ttf");
		}

	/* VARIABLES */
		:root {
			color-scheme: light dark;
			
			/* COLOURS */
				--main: light-dark(
							black, 
							white
						);
				--mainInvert: light-dark(
								white, 
								black
							);
				--destructive: light-dark(
								oklch(56.2% 0.243 23.7), 
								oklch(66.3% 0.237 19)
							);
				--positive: light-dark(
								oklch(67.4% 0.177 170.6), 
								oklch(88% 0.192 174)
							);
				--warning: light-dark(
								oklch(84% 0.198 85.1), 
								oklch(77.5% 0.2 64.7)
							);
				--info: light-dark(
							oklch(65% 0.202 244.8), 
							oklch(70% 0.186 242.2)
						);
				--backgroundPrime: light-dark(
									oklch(97% 0 0), 
									oklch(23.5% 0 0)
								);
				--background: var(--backgroundPrime);
				--foregroundPrime: light-dark(
									white, 
									oklch(26% 0 0)
								);
				--foreground: var(--foregroundPrime);
				--divider: light-dark(
								oklch(92.2% 0 0), 
								oklch(34.8% 0 0)
							);
				--systempanelPrime: light-dark(
										white, 
										oklch(41.8% 0 0)
									);
				--systempanel: var(--systempanelPrime);
				--systempanel-lift: light-dark(
										white, 
										oklch(57.3% 0 0)
									);
				--accentPrime: red;
				
				& [data-contrast="more"] {
					--destructive: light-dark(
									oklch(42.6% 0.192251 25.6), 
									oklch(74.4% 0.201248 15.9)
								);
					--positive: light-dark(
									oklch(54.2% 0.132469 180.5), 
									oklch(88% 0.192209 174)
								);
					--warning: light-dark(
									oklch(77.5% 0.199557 64.7), 
									oklch(89.3% 0.172418 90.7)
								);
					--info: light-dark(
								oklch(51.8% 0.177312 247.2), 
								oklch(77% 0.141104 239.7)
							);
					--background: light-dark(
									oklch(94.2% 0 0), 
									oklch(23.5% 0 0)
								);
					--foreground: light-dark(
									white, 
									oklch(35.8% 0 0)
								);
					--divider: light-dark(
									black, 
									white
								);
					--accent: light-dark(
								oklch(from var(--accentPrime) calc(l - 0.3) c h),
								oklch(from var(--accentPrime) calc(l + 0.2) c h)
					);
				}
			
			/* IMAGES */
				--image-tick: url(images/tick-light.svg);
				--image-arrow-back: url(images/arrow-back-light.svg);
				--image-arrow-forward: url(images/arrow-forward-light.svg);
			
			/* FONTS */
				--font-regular: system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
				--font-rounded: ui-rounded, system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
				--font-monospace: ui-monospace, Consolas, Monaco, monospace;
				--font-serif: ui-serif, "Times New Roman", serif;
				--font-dyslexic: "Open Dyslexic Regular", serif;
				--font-dyslexic-bold: "Open Dyslexic Bold", serif;
				--font-atkinson: "Atkinson Regular", serif;
				--font-atkinson-bold: "Atkinson Bold", serif;
				--font-shantell: "Shantell Sans", serif;
				--font-productsans: "Product Sans Regular", sans-serif;
				--font-segoeui: "Segoe UI", sans-serif;
				--font-sfpro: "SF Pro",  sans-serif;
				--base-font-size: 16px;
			
			/* EFFECTS */
				--shadow-wide: 0px 5px 20px oklch(0 0 0 / .1);
				--shadow-tight: 0px 1px 5px oklch(0 0 0 / .2);
				--base-time-length: 0.3s;
				--material-translucent-small: blur(10px) saturate(2);
				--material-translucent-large: blur(30px) saturate(2);
				--input-border: inset 0px 2px 3px oklch(0 0 0 / .2), 
								inset 0px 0px 0px 1px oklch(0 0 0 / .2);
				--input-border-hover: inset 0px 2px 3px oklch(0 0 0 / .2), 
										inset 0px 0px 0px 1px oklch(0 0 0 / .5);
			
			/* LAYOUT */
				--base-gap-size: 20px;
				--base-radius-size: 10px;
				--tabbar-height: 80px;
				--toolbar-height: 60px;
				--accessorybar-height: 50px;
				--aside-width: 320px;
				
			& [data-contrast="more"] {
				--input-border: inset 0px 2px 3px oklch(0 0 0 / .2), 
								inset 0px 0px 0px 1px oklch(0 0 0 / .5);
				--input-border-hover: inset 0px 2px 3px oklch(0 0 0 / .2), 
									inset 0px 0px 0px 1px var(--accent);
			}
		}
		
		@media (prefers-color-scheme: dark) {
			:root {
				--image-tick: url(images/tick-dark.svg);
				--image-arrow-back: url(images/arrow-back-dark.svg);
				--image-arrow-forward: url(images/arrow-forward-dark.svg);
				--input-border: inset 0px 0px 0px 1px oklch(100% 0 0 / .2);
				--input-border-hover: inset 0px 0px 0px 1px oklch(100% 0 0 / .5);
				
				& [data-contrast="more"] {
					--input-border: inset 0px 0px 0px 1px white;
					--input-border-hover: inset 0px 0px 0px 1px var(--accent);
				}
			}
		}
		
		[data-theme="light"] {
			color-scheme: light;
			
			:root & {
				--image-tick: url(images/tick-light.svg);
				--image-arrow-back: url(images/arrow-back-light.svg);
				--image-arrow-forward: url(images/arrow-forward-light.svg);
				--input-border: inset 0px 2px 3px oklch(0 0 0 / .2), 
								inset 0px 0px 0px 1px oklch(0 0 0 / .2);
				--input-border-hover: inset 0px 2px 3px oklch(0 0 0 / .2), 
										inset 0px 0px 0px 1px oklch(0 0 0 / .5);
			}
			
			:root &[data-contrast="more"] {
				--input-border: inset 0px 2px 3px oklch(0 0 0 / .2), 
								inset 0px 0px 0px 1px oklch(0 0 0 / .5);
				--input-border-hover: inset 0px 2px 3px oklch(0 0 0 / .2), 
									inset 0px 0px 0px 1px var(--accent);
			}
		}
		
		[data-theme="dark"] {
			color-scheme: dark;
			
			:root & {
				--image-tick: url(images/tick-dark.svg);
				--image-arrow-back: url(images/arrow-back-dark.svg);
				--image-arrow-forward: url(images/arrow-forward-dark.svg);
				--input-border: inset 0px 0px 0px 1px oklch(100% 0 0 / .2);
				--input-border-hover: inset 0px 0px 0px 1px oklch(100% 0 0 / .5);
			}
			
			:root &[data-contrast="more"] {
				--input-border: inset 0px 0px 0px 1px white;
				--input-border-hover: inset 0px 0px 0px 1px var(--accent);
			}
		}
		
		[data-textdyslexia="on"] {
			--accessorybar-height: 60px;
		}
		
		[data-os="ios"]:not([data-device="ios"], [data-device="macos"]) {
			--font-regular: "SF Pro", system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
		}
		
		[data-os="ios"] {
			--backgroundPrime: light-dark(
				oklch(97% 0 0), 
				oklch(23.5% 0 0)
			);
			--background: var(--backgroundPrime);
		}
		
		[data-os="macos"]:not([data-device="ios"], [data-device="macos"]) {
			--font-regular: "SF Pro", system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
		}
		
		[data-os="macos"] {
			--shadow-tight: 0px 2px 3px oklch(0 0 0 / .05), 
							0px 0px 0px 1px oklch(0 0 0 / .05);
		}
		
		[data-os="android"] {
			--base-radius-size: 24px;
			--input-border: inset 0px 0px 0px 2px oklch(from var(--main) l c h / .6);
			--input-border-hover: inset 0px 0px 0px 2px var(--main);
			--font-regular: "Product Sans Regular", system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
			--font-regular-bold: "Product Sans Bold", system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
			--divider: oklch(from var(--main) l c h / .1);
			--main: light-dark(
						color-mix(in oklch, black 50%, var(--accent)), 
						color-mix(in oklch, white 75%, var(--accent))
					);
			--backgroundPrime: light-dark(
									oklch(92.5% 0 0), 
									oklch(23.8% 0 0)
								);
			--background: color-mix(in srgb, var(--accent) 5%, var(--backgroundPrime) );
			--foreground: color-mix(in srgb, var(--accent) 5%, var(--foregroundPrime) );
			--systempanel: color-mix(in srgb, var(--accent) 10%, var(--systempanelPrime) );
			
			[data-contrast="more"]& {
				--main: light-dark(black, white);
			}
		}
		
		[data-os="windows"] {
			--base-radius-size: 8px;
			--shadow-tight: 0px 2px 3px oklch(0 0 0 / .05), 
							0px 0px 0px 1px oklch(0 0 0 / .05);
			--input-border: inset 0px 0px 0px 1px oklch(from var(--main) l c h / .4);
			--input-border-hover: inset 0px 0px 0px 1px oklch(from var(--main) l c h / .8);
			--font-regular: "Segoe UI", system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
			--font-regular-bold: "Segoe UI", system-ui, ui-sans-serif, Roboto, Helvetica, sans-serif;
			--divider: oklch(from var(--main) l c h / .1);
			--background: color-mix(in srgb, var(--accent) 2%, var(--foregroundPrime) );
			--foreground: color-mix(in srgb, var(--accent) 2%, var(--backgroundPrime) );
		}
		
		@container (width >= 640px) {
			[data-os="android"] .containerTabBar { --tabbar-height: 80px;}
		}
		
		@media (orientation: landscape) and (height <= 500px) {
			:root { --toolbar-height: 44px; }
		}
		
		@media (width >= 1800px) {
			:root { --aside-width: 414px; }
		}
	
	/* ACCENTS */
		/* APPLE */
			[data-accent="blue"] { 
				--accentPrime: light-dark(
							oklch(62% 0.208 256.1),
							oklch(from oklch(62% 0.208 256.1) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="teal"] { 
				--accentPrime: light-dark(
							oklch(77.9% 0.148 207.5),
							oklch(from oklch(77.9% 0.148 207.5) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="purple"] { 
				--accentPrime: light-dark(
							oklch(51.3% 0.22 326.8),
							oklch(from oklch(51.3% 0.22 326.8) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="pink"] { 
				--accentPrime: light-dark(
							oklch(66.4% 0.201 355.3),
							oklch(from oklch(66.4% 0.201 355.3) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
		
			[data-accent="red"] { 
				--accentPrime: light-dark(
							oklch(57.6% 0.219 26.5),
							oklch(from oklch(57.6% 0.219 26.5) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="orange"] { 
				--accentPrime: light-dark(
							oklch(69.5% 0.188 48.6),
							oklch(from oklch(69.5% 0.188 48.6) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="yellow"] { 
				--accentPrime: light-dark(
							oklch(80.3% 0.165 83.9),
							oklch(from oklch(80.3% 0.165 83.9) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="green"] { 
				--accentPrime: light-dark(
							oklch(66.6% 0.199 139.9),
							oklch(from oklch(66.6% 0.199 139.9) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="graphite"] { 
				--accentPrime: light-dark(
							oklch(67.3% 0 0),
							oklch(from oklch(67.3% 0 0) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
		
		/* iMAC 2021 */
			[data-accent="iyellow"] { 
				--accentPrime: light-dark(
							oklch(68.8% 0.13 72.6),
							oklch(from oklch(68.8% 0.13 72.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="igreen"] { 
				--accentPrime: light-dark(
							oklch(42.6% 0.061 204.3),
							oklch(from oklch(42.6% 0.061 204.3) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="iblue"] { 
				--accentPrime: light-dark(
							oklch(38.3% 0.077 243.5),
							oklch(from oklch(38.3% 0.077 243.5) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="ired"] { 
				--accentPrime: light-dark(
							oklch(44.5% 0.158 23.1),
							oklch(from oklch(44.5% 0.158 23.1) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="ipurple"] { 
				--accentPrime: light-dark(
							oklch(35.7% 0.086 277.8),
							oklch(from oklch(35.7% 0.086 277.8) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="iorange"] { 
				--accentPrime: light-dark(
							oklch(59.8% 0.16 41.3),
							oklch(from oklch(59.8% 0.16 41.3) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
		/* iMAC 2024 */
			[data-accent="iyellow24"] { 
				--accentPrime: light-dark(
							oklch(79.4% 0.151 86.7),
							oklch(from oklch(79.4% 0.151 86.7) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="igreen24"] { 
				--accentPrime: light-dark(
							oklch(54.1% 0.145 145.4),
							oklch(from oklch(54.1% 0.145 145.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="iblue24"] { 
				--accentPrime: light-dark(
							oklch(51.2% 0.098 255.6),
							oklch(from oklch(51.2% 0.098 255.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="ired24"] { 
				--accentPrime: light-dark(
							oklch(53.1% 0.158 14.9),
							oklch(from oklch(53.1% 0.158 14.9) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="ipurple24"] { 
				--accentPrime: light-dark(
							oklch(52.5% 0.071 287.5),
							oklch(from oklch(52.5% 0.071 287.5) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="iorange24"] { 
				--accentPrime: light-dark(
							oklch(64.8% 0.173 42),
							oklch(from oklch(64.8% 0.173 42) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
		/* ANDROID */
			[data-accent="android-red"] { 
				--accentPrime: light-dark(
							oklch(from oklch(83.9% 0.09 15.7) calc(l - 0.1) c h),
							oklch(83.9% 0.09 15.7)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-orange"] { 
				--accentPrime: oklch(83.2% 0.126 66.7);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-sun"] { 
				--accentPrime: light-dark(
							oklch(57.2% 0.101 68.8),
							oklch(from oklch(57.2% 0.101 68.8) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-yellow"] { 
				--accentPrime: light-dark(
							oklch(82.6% 0.143 92.3),
							oklch(from oklch(82.6% 0.143 92.3) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-green"] { 
				--accentPrime: light-dark(
							oklch(81.9% 0.132 133.6),
							oklch(from oklch(81.9% 0.132 133.6) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-carbon"] { 
				--accentPrime: light-dark(
							oklch(56% 0.09 159.4),
							oklch(from oklch(56% 0.09 159.4) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-blue"] { 
				--accentPrime: oklch(82.8% 0.088 247.2);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-classic"] { 
				--accentPrime: light-dark(
							oklch(56.6% 0.093 265.6),
							oklch(from oklch(56.6% 0.093 265.6) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-indigo"] { 
				--accentPrime: light-dark(
							oklch(from oklch(83.7% 0.088 291.7) calc(l - 0.1) c h),
							oklch(83.7% 0.088 291.7)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-paper"] { 
				--accentPrime: light-dark(
							oklch(57.3% 0.089 287.2),
							oklch(from oklch(57.3% 0.089 287.2) calc(l + 0.1) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="android-violet"] { 
				--accentPrime: light-dark(
							oklch(from oklch(84.3% 0.134 323.2) calc(l - 0.1) c h),
							oklch(84.3% 0.134 323.2)
				);
				--accent: var(--accentPrime);
			}
			
		/* WINDOWS */
			[data-accent="windows-yellow-gold"] { 
				--accentPrime: light-dark(
							oklch(82.9% 0.171 81.3),
							oklch(from oklch(82.9% 0.171 81.3) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-gold"] { 
				--accentPrime: light-dark(
							oklch(75.1% 0.179 58.4),
							oklch(from oklch(75.1% 0.179 58.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-orange-bright"] { 
				--accentPrime: light-dark(
							oklch(68% 0.197 43.2),
							oklch(from oklch(68% 0.197 43.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-orange-dark"] { 
				--accentPrime: light-dark(
							oklch(58.6% 0.169 42.4),
							oklch(from oklch(58.6% 0.169 42.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-rust"] { 
				--accentPrime: light-dark(
							oklch(58.7% 0.203 35.6),
							oklch(from oklch(58.7% 0.203 35.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-pale-rust"] { 
				--accentPrime: light-dark(
							oklch(68.2% 0.171 32.4),
							oklch(from oklch(68.2% 0.171 32.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-brick-red"] { 
				--accentPrime: light-dark(
							oklch(57.1% 0.194 24.6),
							oklch(from oklch(57.1% 0.194 24.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-mod-red"] { 
				--accentPrime: light-dark(
							oklch(66.2% 0.224 25.7),
							oklch(from oklch(66.2% 0.224 25.7) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-pale-red"] { 
				--accentPrime: light-dark(
							oklch(62.9% 0.194 20),
							oklch(from oklch(62.9% 0.194 20) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-red"] { 
				--accentPrime: light-dark(
							oklch(59% 0.235 26.2),
							oklch(from oklch(59% 0.235 26.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-rose-bright"] { 
				--accentPrime: light-dark(
							oklch(60% 0.24 10.1),
							oklch(from oklch(60% 0.24 10.1) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-rose"] { 
				--accentPrime: light-dark(
							oklch(52.4% 0.21 8.3),
							oklch(from oklch(52.4% 0.21 8.3) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-plum-light"] { 
				--accentPrime: light-dark(
							oklch(59.9% 0.248 353.4),
							oklch(from oklch(59.9% 0.248 353.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-plum"] { 
				--accentPrime: light-dark(
							oklch(52.8% 0.218 352.4),
							oklch(from oklch(52.8% 0.218 352.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-orchid-light"] { 
				--accentPrime: light-dark(
							oklch(59% 0.216 332.7),
							oklch(from oklch(59% 0.216 332.7) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-orchid"] { 
				--accentPrime: light-dark(
							oklch(47.2% 0.21 334.4),
							oklch(from oklch(47.2% 0.21 334.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-blue"] { 
				--accentPrime: light-dark(
							oklch(56.7% 0.166 251.2),
							oklch(from oklch(56.7% 0.166 251.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-navy-blue"] { 
				--accentPrime: light-dark(
							oklch(49.4% 0.146 251.6),
							oklch(from oklch(49.4% 0.146 251.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-purple-shadow"] { 
				--accentPrime: light-dark(
							oklch(67.3% 0.112 284.5),
							oklch(from oklch(67.3% 0.112 284.5) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-purple-shadow-dark"] { 
				--accentPrime: light-dark(
							oklch(57.7% 0.163 281.1),
							oklch(from oklch(57.7% 0.163 281.1) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-iris-pastel"] { 
				--accentPrime: light-dark(
							oklch(57.4% 0.131 302),
							oklch(from oklch(57.4% 0.131 302) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-iris-spring"] { 
				--accentPrime: light-dark(
							oklch(50.7% 0.143 300.6),
							oklch(from oklch(50.7% 0.143 300.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-violet-red-light"] { 
				--accentPrime: light-dark(
							oklch(58.6% 0.203 321.8),
							oklch(from oklch(58.6% 0.203 321.8) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-violet-red"] { 
				--accentPrime: light-dark(
							oklch(46.1% 0.202 322.2),
							oklch(from oklch(46.1% 0.202 322.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-cool-blue-bright"] { 
				--accentPrime: light-dark(
							oklch(63.3% 0.117 221.1),
							oklch(from oklch(63.3% 0.117 221.1) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-cool-blue"] { 
				--accentPrime: light-dark(
							oklch(55.3% 0.088 226.3),
							oklch(from oklch(55.3% 0.088 226.3) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-seafoam"] { 
				--accentPrime: light-dark(
							oklch(71% 0.121 203.6),
							oklch(from oklch(71% 0.121 203.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-seafoam-teal"] { 
				--accentPrime: light-dark(
							oklch(55.4% 0.094 198.9),
							oklch(from oklch(55.4% 0.094 198.9) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-mint-light"] { 
				--accentPrime: light-dark(
							oklch(68.1% 0.129 174.9),
							oklch(from oklch(68.1% 0.129 174.9) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-mint-dark"] { 
				--accentPrime: light-dark(
							oklch(55.3% 0.1 179.1),
							oklch(from oklch(55.3% 0.1 179.1) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-turf-green"] { 
				--accentPrime: light-dark(
							oklch(74% 0.194 152.2),
							oklch(from oklch(74% 0.194 152.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-sport-green"] { 
				--accentPrime: light-dark(
							oklch(55.2% 0.15 149.4),
							oklch(from oklch(55.2% 0.15 149.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-gray"] { 
				--accentPrime: light-dark(
							oklch(56.6% 0.006 31),
							oklch(from oklch(56.6% 0.006 31) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-gray-brown"] { 
				--accentPrime: light-dark(
							oklch(46.9% 0.005 63.2),
							oklch(from oklch(46.9% 0.005 63.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-steel-blue"] { 
				--accentPrime: light-dark(
							oklch(56.3% 0.034 256.3),
							oklch(from oklch(56.3% 0.034 256.3) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-metal-blue"] { 
				--accentPrime: light-dark(
							oklch(47.2% 0.028 255.1),
							oklch(from oklch(47.2% 0.028 255.1) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-pale-moss"] { 
				--accentPrime: light-dark(
							oklch(55.5% 0.045 177.7),
							oklch(from oklch(55.5% 0.045 177.7) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-moss"] { 
				--accentPrime: light-dark(
							oklch(49% 0.039 176.8),
							oklch(from oklch(49% 0.039 176.8) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-meadow-green"] { 
				--accentPrime: light-dark(
							oklch(54.7% 0.154 133.4),
							oklch(from oklch(54.7% 0.154 133.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-green"] { 
				--accentPrime: light-dark(
							oklch(51% 0.165 142.8),
							oklch(from oklch(51% 0.165 142.8) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-overcast"] { 
				--accentPrime: light-dark(
							oklch(56.6% 0 0),
							oklch(from oklch(56.6% 0 0) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-storm"] { 
				--accentPrime: light-dark(
							oklch(41% 0.005 63.2),
							oklch(from oklch(41% 0.005 63.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-blue-gray"] { 
				--accentPrime: light-dark(
							oklch(56.6% 0.021 214.2),
							oklch(from oklch(56.6% 0.021 214.2) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-gray-dark"] { 
				--accentPrime: light-dark(
							oklch(44% 0.015 224.4),
							oklch(from oklch(44% 0.015 224.4) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-liddy-green"] { 
				--accentPrime: light-dark(
							oklch(56% 0.045 144.6),
							oklch(from oklch(56% 0.045 144.6) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-sage"] { 
				--accentPrime: light-dark(
							oklch(46.9% 0.023 151.7),
							oklch(from oklch(46.9% 0.023 151.7) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-camouflage-desert"] { 
				--accentPrime: light-dark(
							oklch(56.5% 0.07 94.1),
							oklch(from oklch(56.5% 0.07 94.1) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			[data-accent="windows-camouflage"] { 
				--accentPrime: light-dark(
							oklch(55.9% 0.033 81.7),
							oklch(from oklch(55.9% 0.033 81.7) calc(l + 0.2) c h)
				);
				--accent: var(--accentPrime);
			}
			
			
	
	
	* {
		box-sizing: border-box;
		outline: none;
	}
	
	::selection {
		background: oklch(from var(--accent) l c h / .2);
	}
	
	html {
		margin: 0px;
		padding: 0px;
		background: black;
	}
	
	html, 
	body {
		margin: 0px;
		padding: 0px;
		width: 100vw;
		height: 100vh;
		overflow: hidden
	}


/* TEXT */
	[data-textweight="bold"][data-os="android"] * {
		font-family: var(--font-regular-bold);
		font-weight: normal;
	}

	[data-font="opendyslexic"] *:not(.ignoreFontOverride) {
		font-family: var(--font-dyslexic) !important;
	}
	
	[data-textweight="bold"][data-font="opendyslexic"] *:not(.ignoreFontOverride) {
		font-family: var(--font-dyslexic-bold) !important;
	}
	
	[data-font="atkinson"] *:not(.ignoreFontOverride) {
		font-family: var(--font-atkinson) !important;
	}
	
	[data-textweight="bold"][data-font="atkinson"] *:not(.ignoreFontOverride) {
		font-family: var(--font-atkinson-bold) !important;
	}
	
	[data-font="shantell"] *:not(.ignoreFontOverride) {
		font-family: var(--font-shantell) !important;
	}
	
	[data-font="mono"] *:not(.ignoreFontOverride) {
		font-family: var(--font-monospace) !important;
	}
	
	[data-font="serif"] *:not(.ignoreFontOverride) {
		font-family: var(--font-serif) !important;
	}
	
	[data-font="productsans"] *:not(.ignoreFontOverride) {
		font-family: var(--font-productsans) !important;
	}
	
	[data-font="segoeui"] *:not(.ignoreFontOverride) {
		font-family: var(--font-segoeui) !important;
	}
	
	[data-font="sfpro"] *:not(.ignoreFontOverride) {
		font-family: var(--font-sfpro) !important;
	}

	h1, 
	h2, 
	h3, 
	h4, 
	h5, 
	h6 {
		font-family: var(--font-regular);
		color: var(--main);
		margin: 0px;
		padding-bottom: calc(var(--base-gap-size) / 2);
		text-wrap: balance;
	}
	
	[data-os="android"] :is(h1, h2, h3, h4, h5, h6) {
		font-family: var(--font-regular-bold);
		font-weight: normal;
	}
	
	[data-os="windows"] :is(h1, h2, h3, h4, h5, h6) {
		font-family: var(--font-regular-bold);
		font-weight: 500;
	}
	
	[data-font="atkinson"] :is(h1, h2, h3, h4, h5, h6) {
		font-family: var(--font-atkinson-bold) !important;
		font-weight: normal;
	}
	
	[data-font="opendyslexic"] :is(h1, h2, h3, h4, h5, h6) {
		font-family: var(--font-dyslexic-bold) !important;
		font-weight: normal;
	}
	
	h1, 
	.h1 {
		font-size: calc(var(--base-font-size) * 2.2);
	}
	
	h2, 
	.h2 {
		font-size: calc(var(--base-font-size) * 1.9);
	}
	
	h3, 
	.h3 {
		font-size: calc(var(--base-font-size) * 1.7);
	}
	
	h4, 
	.h4 {
		font-size: calc(var(--base-font-size) * 1.4);
	}
	
	h5, 
	.h5 {
		font-size: calc(var(--base-font-size) * 1.3);
	}
	
	h6, 
	.h6 {
		font-size: var(--base-font-size);
	}
	
	p, 
	label {
		font-family: var(--font-regular);
		color: var(--main);
		font-size: var(--base-font-size);
		line-height: calc(var(--base-font-size) * 1.5);
		margin: 0px;
		margin-block-end: var(--base-gap-size);
	}
	
	ul, 
	ol {
		margin-block-end: var(--base-gap-size);
		margin-block-start: 0px;
		padding: 0px;
		padding-inline-start: var(--base-gap-size);
	}
	
	li {
		font-family: var(--font-regular);
		color: var(--main);
		font-size: var(--base-font-size);
		line-height: calc(var(--base-font-size) * 1.5);
	}
	
	.subtext {
		font-size: calc(var(--base-font-size) * 0.75);
		opacity: 0.5;
		line-height: calc(var(--base-font-size) * 1);
		
		[data-contrast="more"] & {
			opacity: 1;
		}
	}
	
	a {
		font-family: var(--font-regular);
		/* text-decoration: none; */
		color: var(--main);
		
		&:hover {
			cursor: pointer;
			text-decoration: underline;
			color: var(--accent);
		}
	}
	
	code {
		font-family: var(--font-monospace);
		border: 1px solid oklch(from var(--main) l c h / .1);
		background: oklch(from var(--main) l c h / .05);
		border-radius: calc(var(--base-radius-size) / 3);
		padding: 0px calc(var(--base-gap-size) / 5);
		white-space: nowrap;
		color: var(--main);
		
		[data-os="android"] & {
			background: oklch(from var(--accent) l c h / .2);
			border: 1px solid oklch(from var(--accent) l c h / .4);
		}
		
		[data-os="windows"] & {
			background: var(--systempanel);
			box-shadow: 0px 0px 0px 1px oklch(from var(--main) l c h / .1);
			border: none;
		}
		
		[data-contrast="more"] & {
			border: 1px solid var(--divider);
			background: var(--foreground);
		}
	}
	
	pre {
		font-family: var(--font-monospace);
		border: 1px solid oklch(from var(--main) l c h / .1);
		background: oklch(from var(--main) l c h / .05);
		border-radius: calc(var(--base-radius-size) / 3);
		padding: calc(var(--base-gap-size) / 2);
		color: var(--main);
		margin-block-end: var(--base-gap-size);
		margin-block-start: 0px;
		overflow: auto;
		font-size: var(--base-font-size);
		tab-size: 4;
		
		[data-os="android"] & {
			background: oklch(from var(--accent) l c h / .1);
			border: 1px solid oklch(from var(--accent) l c h / .3);
		}
		
		[data-os="windows"] & {
			background: var(--systempanel);
			box-shadow: 0px 0px 0px 1px oklch(from var(--main) l c h / .1);
			border: none;
		}
		
		[data-contrast="more"] & {
			border: 1px solid var(--divider);
			background: var(--foreground);
		}
	}
	
	kbd {
		background-color: oklch(from var(--main) l c h / .05);
		border-radius: calc(var(--base-radius-size) / 2);
		border: 1px solid oklch(from var(--main) l c h / .2);
		box-shadow: 
			0 1px 2px oklch(0 0 0 / .1), 
			inset 0 1px 0 0 oklch(100% 0 0 / .5);
		color: var(--main);
		display: inline-block;
		font-size: var(--base-font-size);
		font-family: var(--font-monospace);
		font-weight: bold;
		line-height: 1;
		padding: calc(var(--base-gap-size) / 4) calc(var(--base-gap-size) / 2);
		white-space: nowrap;
		
		@media (prefers-color-scheme: dark) {
			box-shadow: 0px 1px 2px black, 
						inset 0px 1px 0px 0px oklch(100% 0 0 / .1);
		}
	}
	
	.textAlignLeft {
		text-align: left;
	}
	
	.textAlignCenter {
		text-align: center;
	}
	
	.textAlignRight {
		text-align: right;
	}
	
	.textBold {
		font-weight: bold !important;
		
		[data-os="android"] & {
			font-family: var(--font-regular-bold);
			font-weight: normal !important;
		}
	}
	
	.textRegular {
		font-family: var(--font-regular);
	}
	
	.textRounded {
		font-family: var(--font-rounded);
	}
	
	.textMonospace {
		font-family: var(--font-monospace);
	}
	
	.textSerif {
		font-family: var(--font-serif);
	}
	
	.textDyslexic {
		font-family: var(--font-dyslexic);
	}
	
	.textAtkinson {
		font-family: var(--font-atkinson);
	}
	
	.noDecoration,
	.noDecoration:hover {
		text-decoration: none;
	}
	
	.noBorder {
		border: none !important;
	}
	
	[data-textweight="bold"] .textBold {
		font-weight: bolder !important;
	}
	
	[data-textweight="light"] * {
		font-weight: lighter !important;
	}
	
	[data-textweight="bold"] * {
		font-weight: bold !important;
	}
	
	[data-textweight="extraBold"] * {
		font-weight: bolder !important;
	}


/* ACCENTS */
	/* ALWAYS ACCENT */
		.alwaysAccent, 
		.alwaysAccent path {
			color: var(--accent);
			fill: var(--accent) !important;
		}
		
		svg.alwaysAccent {
			width: var(--base-font-size);
			height: var(--base-font-size);
		}


	/* ALWAYS DESTRUCTIVE */
		.alwaysDestructive, 
		.alwaysDestructive path {
			color: var(--destructive);
			fill: var(--destructive) !important;
		}


	/* ALWAYS POSITIVE */
		.alwaysPositive, 
		.alwaysPositive path {
			color: var(--positive);
			fill: var(--positive) !important;
		}


	/* ALWAYS WARNING */
		.alwaysWarning, 
		.alwaysWarning path {
			color: var(--warning);
			fill: var(--warning) !important;
		}


	/* ALWAYS INFO */
		.alwaysInfo, 
		.alwaysInfo path {
			color: var(--info);
			fill: var(--info) !important;
		}


	/* ALWAYS MAIN */
		.alwaysMain, 
		.alwaysMain path {
			color: var(--main);
			fill: var(--main) !important;
		}
		
		.alwaysMainInvert, 
		.alwaysMainInvert path {
			color: var(--mainInvert);
			fill: var(--mainInvert) !important;
		}


/* HEADER */
	.headerSection {
		background: var(--foreground);
		padding: var(--base-gap-size);
		border-radius: var(--base-radius-size) var(--base-radius-size) 0px 0px;
		border-block-end: 1px solid var(--divider);
		font-size: calc(var(--base-font-size) * 1.2);
		
		[data-os="ios"] .containerAside & {
			background: var(--foreground);
			
			@media (width >= 640px) {
				background: var(--background);
			}
		}
		
		[data-os="macos"] & {
			background: oklch(from var(--main) l c h / .02);
			border: 1px solid oklch(from var(--main) l c h / .1);
			border-block-end: none;
		}
		
		[data-os="android"] & {
			background: oklch(from var(--accent) l c h / .1);
			border-color: oklch(from var(--accent) l c h / .1);
		}
		
		[data-os="windows"] & {
			background: var(--systempanel);
			border: 1px solid oklch(from var(--main) l c h / .1);
			border-block-end: none;
		}
		
		[data-os="macos"] .containerAccordion &, 
		[data-os="windows"] .containerAccordion & {
			border: none;
		}
		
		[data-contrast="more"] *:not(.containerItemList) > & {
			border: 1px solid var(--divider);
			border-block-end: none;
		}
		
		& h1, 
		& h2, 
		& h3, 
		& h4, 
		& h5, 
		& h6 {
			font-size: calc(var(--base-font-size) * 1.2);
			padding: 0px;
			margin: 0px;
		}
	}
	
	.headerSection.withIcon, 
	.containerSection.withIcon {
		display: flex;
		flex-direction: row !important;
		align-items: center !important;
		gap: calc(var(--base-gap-size) / 2) !important;
		
		& .containerIcon {
			width: calc(var(--base-font-size) * 1.5);
			height: calc(var(--base-font-size) * 1.5);
			
			& svg,
			& img {
				width: calc(var(--base-font-size) * 1.5);
				height: calc(var(--base-font-size) * 1.5);
			}
		}
	}
	
	.headerList {
		font-size: calc(var(--base-font-size) * 0.8);
		text-transform: uppercase;
		opacity: 0.5;
		margin-inline-start: calc(var(--base-gap-size) / 2);
		padding-block-end: calc(var(--base-gap-size) / 2);
		
		[data-contrast="more"] & {
			opacity: 1;
		}
		
		[data-os="android"] & {
			color: var(--accent);
			text-transform: none;
			font-family: var(--font-regular);
			font-weight: normal !important;
			opacity: 1;
		}
		
		[data-os="windows"] & {
			text-transform: none;
			opacity: 1;
			font-size: var(--base-font-size);
			font-weight: 500 !important;
		}
	}
	
	.headerToolbar {
		font-size: calc(var(--base-font-size) * 1.2);
		margin: 0px;
		padding: 0px;
		text-align: center;
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;
		
		[data-os="macos"] & {
			font-size: var(--base-font-size);
			color: oklch(from var(--main) l c h / .8);
		}
		
		[data-os="android"] & {
			text-align: left;
			font-weight: normal;
			font-family: var(--font-regular);
		}
		
		@media (width >= 1100px) and (pointer: fine) {
			:not(dialog) & {
				text-align: left;
				order: -1;
				padding-inline-start: calc(var(--base-gap-size) / 2);
			}
			
			:not(dialog) .alwaysLeft & {
				order: 0;
			}
		}
	}
	
	dialog .headerToolbar {
		@media (width >= 1100px) and (pointer: fine) {
			text-align: center;
			order: 0;
			padding: 0 var(--base-gap-size);
			
			[data-os="macos"] &, 
			[data-os="android"] &, 
			[data-os="windows"] & {
				text-align: left;
				order: -1;
			}
		}
	}

	dialog .containerToolbar{
		@media (width >= 1100px) and (pointer: fine) {
			[data-os="default"] &, 
			[data-os="ios"] & {
				grid-template-columns: 88px 1fr 88px !important;
			}
			
			[data-os="macos"] &, 
			[data-os="android"] &, 
			[data-os="windows"] & {
				grid-template-columns: 1fr auto 88px;
			}
		}
	}

	
/* ELEMENTS */
	.shapeCircle {
		border-radius: calc(var(--base-radius-size) * 20);
	}


/* LAYOUT */
	/* HELPERS */
		.alwaysBackgroundColor {
			background: var(--background) !important;
			fill: var(--background) !important;
		}
		
		.alwaysForegroundColor {
			background: var(--foreground) !important;
			fill: var(--foreground) !important;
		}
		
		.noBackgroundColor {
			background: none !important;
		}
		
		.keepInitialWidth {
			width: auto !important;
		}
		
		.disablePointer {
			pointer-events: none;
		}
		
		.hidden {
			display: none !important;
		}


	/* APP FRAME */
		.containerApp {
			position: fixed; /* This was originally set to absolute */
			width: 100vw;
			height: 100%;
			top: 0px;
			
			@media (display-mode: standalone) {
				height: 100vh;
			}
			
			@media (width < 640px) {
				transition: calc(var(--base-time-length) * 2) transform ease, calc(var(--base-time-length) * 2) border-radius ease;
				border-radius: 0px;
				overflow: hidden;
				transform-origin: top center;
				transform: translateZ(0);
				
				&.recede {
					border-radius: var(--base-radius-size);
					transform: scale(0.95) translateY(calc(10px + env(safe-area-inset-top)));
					transition: calc(var(--base-time-length) * 2) transform ease, calc(var(--base-time-length) * 2) border-radius ease;
				}
			}
			
			@media (width >= 640px) {
				transition: var(--base-time-length) transform ease, var(--base-time-length) width ease;
				transform-origin: right;
				
				&.fullWidth {
					width: calc(100% + var(--aside-width));
					transform: translateX(calc(var(--aside-width) * -1));
					transition: var(--base-time-length) transform ease, var(--base-time-length) width ease;
					transform-origin: right;
				}
			}
			
			@media (width >= 1100px) {
				&.columnsThree.fullWidth {
					width: calc(100% + (var(--aside-width) * 2));
					transform: translateX(calc((var(--aside-width) * 2) * -1));
				}
			}
		}


	/* CONTAINERS */
		.containerSection {
			background: var(--foreground);
			padding: var(--base-gap-size);
			margin-block-end: calc(var(--base-gap-size) * 2);
			border-radius: var(--base-radius-size);
			
			[data-os="ios"] .containerAside & {
				background: var(--foreground);
				
				@media (width >= 640px) {
					background: var(--background);
				}
			}
			
			[data-os="ios"] .containerAside .inset & {
				@media (width >= 640px) {
					background: none;
				}
			}
			
			[data-os="macos"] &:not(.banner) {
				background: oklch(from var(--main) l c h / .02);
				border: 1px solid oklch(from var(--main) l c h / .1);
			}
			
			[data-os="android"] & {
				background: oklch(from var(--accent) l c h / .1);
			}
			
			[data-os="android"] .containerItemList & {
				border-radius: 0px;
			}
			
			[data-os="windows"] &:not(.banner) {
				background: var(--systempanel);
				border: 1px solid oklch(from var(--main) l c h / .1);
				border-radius: var(--base-radius-size);
			}
			
			[data-os="windows"] .headerSection + &:not(.banner) {
				border-radius: 0px 0px var(--base-radius-size) var(--base-radius-size);
				background: none;
			}
			
			&.warning {
				background: oklch(from var(--warning) l c h / .1);
				
				[data-os="android"] & {
					background: color-mix(in oklch, var(--warning) 30%, light-dark(white, rgb(85, 85, 85)) );
				}
			}
			
			[data-contrast="more"] *:not(.containerItemList) > & {
				border: 1px solid var(--divider);
			}
			
			&.info {
				background: oklch(from var(--info) l c h / .1);
				
				[data-os="android"] & {
					background: color-mix(in oklch, var(--info) 30%, light-dark(white, rgb(85, 85, 85)) );
				}
			}
			
			&.error {
				background: oklch(from var(--destructive) l c h / .1);
				
				[data-os="android"] & {
					background: color-mix(in oklch, var(--destructive) 30%, light-dark(white, rgb(85, 85, 85)) );
				}
			}
			
			&.success {
				background: oklch(from var(--positive) l c h / .1);
				
				[data-os="android"] & {
					background: color-mix(in oklch, var(--positive) 30%, light-dark(white, rgb(85, 85, 85)) );
				}
			}
			
			&.accent {
				background: oklch(from var(--accent) l c h / .1);
				
				& path {
					fill: var(--accent);
				}
			}
			
			&.withIcon {
				display: grid;
				grid-template-columns: calc(var(--base-font-size) * 1.5) 1fr;
				gap: calc(var(--base-gap-size) / 4);
				align-items: center;
				
				&.small {
					background: none;
					padding: 0px;
					border-radius: 0px;
				}
				
				& svg {
					width: calc(var(--base-font-size) * 1.5);
					height: calc(var(--base-font-size) * 1.5);
				}
			}
			
			.headerSection + & {
				border-radius: 0px 0px var(--base-radius-size) var(--base-radius-size);
			}
		}
		
		.containerGeneric {
			background: var(--background);
			border: 1px solid var(--divider);
			margin-block-end: var(--base-gap-size);
			padding: var(--base-gap-size);
		}
		
		.excludePadding {
			padding: 0px !important;
		}
		
		.excludeMargin {
			margin: 0px !important;
		}
		
		.spacerHalf {
			margin-block-end: calc(var(--base-gap-size) / 2);
		}
		
		.spacerSingle {
			margin-block-end: var(--base-gap-size);
		}
		
		.spacerDouble {
			margin-block-end: calc(var(--base-gap-size) * 2);
		}
		
		.spacerTriple {
			margin-block-end: calc(var(--base-gap-size) * 3);
		}
	
	
	/* COLUMNS */
		.containerAside {
			position: absolute;
			top: 0px;
			height: 100%;
			width: 100%;
			background: var(--foreground);
			overflow: hidden;
			transition: var(--base-time-length) transform ease;
			
			@media (width >= 640px) {
				border-inline-end: 1px solid var(--divider);
			}
			
			[data-os="ios"] & {
				@media (width < 640px) {
					background: var(--background);
				}
			}
			
			[data-os="windows"] & {
				@media (width >= 640px) {
					border: none;
				}
			}
			
			[data-os="android"] & {
				background: var(--background);
				
				@media (width >= 640px) {
					border: none;
				}
			}
			
			& .containerToolbar  {
				padding: env(safe-area-inset-top) calc(var(--base-gap-size) / 2) 0px max(var(--base-gap-size) / 2, env(safe-area-inset-left));
			}
			
			&.single, 
			&.double {
				@media (width >= 640px) {
					width: var(--aside-width);
				}
			}
			
			&.single {
				@media (width >= 1100px) {
					& + main {
						width: calc(100% - var(--aside-width));
						transform: translateX(var(--aside-width));
					}
				}
			}
			
			&.double {
				@media (width >= 1100px) {
					width: calc(var(--aside-width) * 2);
					
					& + main {
						width: calc(100% - (var(--aside-width) * 2));
						transform: translateX(calc(var(--aside-width) * 2));
					}
				}
			}
			
			& .containerToolbar {
				@media (width >= 1100px) {
					border-inline-end: 1px solid var(--divider);
				}
			}
		}
		
		.columnPrimary {
			width: 100%;
			height: 100%;
			position: absolute;
			left: 0px;
			top: 0px;
			transform: translateX(0vw);
			transition: calc(var(--base-time-length) * 1.5) transform ease;
			
			@media (width >= 640px) {
				width: var(--aside-width);
			}
			
			@media (width >= 1100px) {
				width: var(--aside-width);
			}
			
			[data-os="ios"] &, 
			[data-os="macos"] & {
				background: var(--background);
			}
			
			&.slightSlide {
				transform: translateX(-20vw);
				transition: calc(var(--base-time-length) * 1.5) transform ease;
				
				@media (width >= 640px) {
					transform: translateX(-10vw);
					
					.containerAside.single & {
						transform: none;
					}
				}
				
				@media (width >= 1100px) {
					transform: translateX(0vw);
					border: 3px soid red !important;
				}
			}
		}
		
		.columnSecondary {
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0px;
			transform: translateX(100vw);
			transition: calc(var(--base-time-length) * 1.5) transform ease;
			background: var(--background);
			
			@media (width >= 1100px) {
				width: var(--aside-width);
				transform: translateX(var(--aside-width));
				transition: none;
			}
			
			[data-os="macos"] & {
				background: var(--foreground);
			}
				
			[data-os="windows"] & {
				background: var(--background);
			}
			
			&.active {
				transform: translateX(0vw);
				z-index: 2;
				transition: calc(var(--base-time-length) * 1.5) transform ease;
				box-shadow: var(--shadow-tight);
				
				@media (width >= 1100px) {
					transition: none;
					transform: translateX(var(--aside-width));
					box-shadow: none;
				}
			}
			
			&.slightSlide {
				transform: translateX(-20vw);
				transition: calc(var(--base-time-length) * 1.5) transform ease;
				
				@media (width >= 640px) {
					transform: translateX(-10vw);
					transform: none;
				}
				
				@media (width >= 1100px) {
					transform: translateX(var(--aside-width));
				}
			}
		}
		
		main {
			height: 100%;
			overflow: hidden;
			position: absolute;
			top: 0px;
			transform: translateX(100vw);
			z-index: 3;
			width: 100%;
			background: var(--background);
			transition: calc(var(--base-time-length) * 1.5) transform ease;
			
			@media (width >= 640px) {
				transform: translateX(var(--aside-width));
				width: calc(100% - var(--aside-width));
				transition: var(--base-time-length) width ease, var(--base-time-length) transform ease;
			}
			
			@media (width >= 1100px) {
				transition: none;
				transition: var(--base-time-length) width ease, var(--base-time-length) transform ease;
			}
			
			[data-os="macos"] &, 
			[data-os="android"] & {
				background: var(--foreground);
			}
			
			&.active {
				transform: translateX(0vw);
				transition: calc(var(--base-time-length) * 1.5) transform ease;
				box-shadow: var(--shadow-tight);
				
				@media (width >= 640px) {
					transform: translateX(var(--aside-width));
					box-shadow: none;
				}
				
				@media (width >= 1100px) {
					transition: none;
					box-shadow: none;
				}
			}
		}
		
		.paddingContent, 
		.paddingContentTight {
			padding-block-start: var(--base-gap-size);
			padding-block-end: max(var(--base-gap-size), env(safe-area-inset-bottom));
			padding-inline-start: var(--base-gap-size);
			padding-inline-end: max(var(--base-gap-size), env(safe-area-inset-right));
			scrollbar-gutter: stable both-edges;
			
			& > :last-child {
				margin: 0px;
			}
		}
		
		.paddingContent {
			@media (width >= 1200px) {
				padding: calc(var(--base-gap-size) * 2) 5%;
			}
			
			@media (width >= 1600px) {
				padding: calc(var(--base-gap-size) * 2) 10%;
			}
			
			@media (width >= 2000px) {
				padding: calc(var(--base-gap-size) * 2) 20%;
			}
			
			.fullWidth & {
				@media (width >= 1200px) {
					padding: calc(var(--base-gap-size) * 2) 15%;
				}
				
				@media (width >= 1600px) {
					padding: calc(var(--base-gap-size) * 2) 20%;
				}
				
				/* @media (width >= 2000px) {
					padding: calc(var(--base-gap-size) * 2) 30%;
				} */
			}
			
			@media (width >= 2400px) {
				padding: calc(var(--base-gap-size) * 2) 25%;
			}
		}
		
		.paddingContentTight {
			@media (width >= 1600px) {
				padding-block-start: var(--base-gap-size);
				padding-block-end: max(var(--base-gap-size), env(safe-area-inset-bottom));
				padding-inline: calc(var(--base-gap-size) * 12);
				
				.fullWidth & {
					padding-inline: calc(var(--base-gap-size) * 18);
				}
			}
		}
		
		#appGlyph {
			@media (width >= 640px) {
				position: absolute;
				top: 0px;
				right: 0px;
				z-index: 200;
				width: calc(100% - var(--aside-width));
				height: 100%;
				display: flex;
				justify-content: center;
				align-items: center;
				padding: var(--base-gap-size);
			}
			
			@media (width >= 1100px) {
				width: calc(100% - var(--aside-width));
			}
			
			& svg {
				@media (width >= 640px) {
					max-width: 100%;
					max-height: 100%;
				}
			}
			
			& path {
				@media (width >= 640px) {
					fill: oklch(from var(--main) l c h / .05);
					
					[data-contrast="more"] & {
						fill: oklch(from var(--main) l c h / .2);
					}
				}
			}
			
			.columnTertiary.active + & {
				display: none;
			}
			
			.columnsThree & {
				@media (width >= 1100px) {
					width: calc(100% - (var(--aside-width) * 2));
				}
			}
		}

	
	/* SIDEBARS */
		.containerSidebar {
			width: 100%;
			height: 100%;
			overflow: auto;
			position: absolute;
			top: 0px;
			left: 0px;
			background: var(--background);
			padding-inline-start: max(var(--base-gap-size), env(safe-area-inset-left));
			padding-inline-end: var(--base-gap-size);
			padding-block-start: calc((var(--base-gap-size) * 2) + env(safe-area-inset-top));
			padding-block-end: max(var(--base-gap-size), env(safe-area-inset-bottom));
			
			[data-os="android"] &, 
			[data-os="windows"] & {
				background: none;
			}
			
			& h1 {
				margin-block-start: 0px;
				padding-block-end: var(--base-gap-size);
				margin-inline-start: calc(var(--base-gap-size) / 2);
			}
			
			& .headerAccordion {
				margin-inline-start: calc(var(--base-gap-size) / 2);
				margin-inline-end: calc(var(--base-gap-size) / 2);
				padding-block-end: calc(var(--base-gap-size) / 2);
				
				& svg {
					width: calc(var(--base-font-size) * 0.8);
					height: calc(var(--base-font-size) * 0.8);
				}
			}
			
			& button.sidebar {
				width: 100%;
			}
			
			& section:not(:last-child) {
				margin-block-end: calc(var(--base-gap-size) * 2);
			}
			
			& .grid {
				@media (width < 640px) {
					display: grid;
					grid-template-columns: repeat(2, 1fr);
					gap: calc(var(--base-gap-size) / 2);
				}
				
				& [data-button="sidebar"] {
					@media (width < 640px) {
						background: var(--foreground);
						display: flex;
						justify-content: center;
						align-items: center;
						flex-direction: column;
						gap: calc(var(--base-gap-size) / 2);
						padding-block: var(--base-gap-size);
						border-radius: var(--base-radius-size);
						
						[data-os="macos"] & {
							background: oklch(from var(--main) l c h / .05);
							border: 1px solid oklch(from var(--main) l c h / .1);
						}
						
						[data-os="android"] & {
							background: oklch(from var(--accent) l c h / .05);
						}
						
						[data-os="windows"] & {
							background: oklch(from var(--systempanel) l c h / .6);
							box-shadow: 0px 0px 0px 1px oklch(from var(--main) l c h / .1);
						}
						
						&.picked, 
						&.picked:hover {
							background: var(--accent);
							padding-block: var(--base-gap-size);
						}
						
						&:hover {
							background: oklch(from var(--main) l c h / .1);
							
							[data-os="android"] & {
								background: oklch(from var(--accent) l c h / .1);
							}
						}
						
						& .labelSidebar {
							display: flex;
							flex-direction: column;
							justify-content: center;
							gap: calc(var(--base-gap-size) / 2);
							text-align: center;
						}
						
						& svg, 
						& img {
							width: calc(var(--base-font-size) * 3);
							height: calc(var(--base-font-size) * 3);
							margin: 0px;
						}
					}
				}
			}
			
			@media (width >= 640px) {
				background: var(--foreground);
				width: var(--aside-width);
				padding-inline-start: max(var(--base-gap-size) / 2, env(safe-area-inset-left));
				padding-inline-end: calc(var(--base-gap-size) / 2);
				padding-block-start: calc((var(--base-gap-size) * 2) + env(safe-area-inset-top));
				padding-block-end: max(var(--base-gap-size) / 2, env(safe-area-inset-bottom));
				
				[data-os="macos"] & {
					background: var(--background);
				}
			}
			
			@media (width >= 1100px) {
				border-inline-end: 1px solid var(--divider);
				
				[data-os="android"] & {
					border-inline-end: 1px solid oklch(from var(--accent) l c h / .1);
				}
				
				[data-os="windows"] & {
					border-inline-end: none;
				}
			}
		}


	/* ITEM LISTS */
		.containerItemList {
			width: 100%;
			position: absolute;
			top: 0px;
			left: 0px;
			
			&.cropAccessoryBar {
				top: var(--accessorybar-height);
			}
			
			&.inline {
				height: auto;
				position: relative;
				padding: 0px !important;
			}
			
			&.inset {
				padding: var(--base-gap-size);
				padding-block-end: max(var(--base-gap-size), env(safe-area-inset-bottom));
				
				@media (width >= 640px) {
					padding: calc(var(--base-gap-size) / 2);
					padding-block-end: max(var(--base-gap-size) / 2, env(safe-area-inset-bottom));
				}
				
				.containerAside & {
					padding-inline-start: max(var(--base-gap-size), env(safe-area-inset-left));
					
					@media (width >= 640px) {
						padding-inline-start: max(var(--base-gap-size) / 2, env(safe-area-inset-left));
					}
				}
				
				@media (width < 640px) {
					& .containerSection {
						overflow: hidden;
					}
				}
				
				& button.rounded:hover, 
				& button.rounded.picked {
					border-block-start: 1px solid transparent !important;
					
					[data-os="android"] &, 
					[data-os="windows"] & {
						border-block-start: none !important;
					}
				}
			}
			
			&:not(.inset) .containerSection {
				border-radius: 0px;
				border-block-start: 1px solid var(--divider);
				border-block-end: 1px solid var(--divider);
			}
			
			[data-os="windows"] & .containerSection {
				background: none;
				border: none;
				border-radius: 0px;
			}
			
			/* & button, 
			& div {
				flex: 1;
			} */
			
			& button:last-child, 
			& div:not(.contextContainerMenu, .rounded):last-child {
				border-block-end: 1px solid transparent;
			}
			
			& .rounded:first-child {
				border-block-start: 1px solid transparent;
				
				@media (width >= 640px) {
					border-block-end: 1px solid var(--divider);
				}
			}
			
			& .rounded:last-child {
				@media (width >= 640px) {
					border-block-end: 1px solid var(--divider) !important;
					
					[data-os="android"] & {
						border-block-end: none !important;
					}
					
					[data-os="windows"] & {
						border-block-end: none !important;
					}
				}
			}
			
			& button.rounded.picked:last-child, 
			& button.rounded:hover:last-child {
				@media (width >= 640px) {
					border-block-end: 1px solid transparent !important;
					
					[data-os="android"] &, 
					[data-os="windows"] & {
						border-block-end: none;
					}
				}
			}
			
			& .containerSection {
				[data-os="macos"] & {
					@media (width >= 640px) {
						background: none;
						border: none;
					}
				}
				
				[data-os="android"] & {
					background: none;
				}
			}
			
			&.alwaysBackgroundColor {
				[data-os="android"] & {
					background: oklch(from var(--accent) l c h / .05) !important;
					border-radius: var(--base-radius-size);
				}
				
				[data-os="windows"] & {
					background: var(--systempanel) !important;
					border-radius: var(--base-radius-size);
					box-shadow: inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1);
				}
				
				[data-os="windows"][data-contrast="more"] & {
					box-shadow: 0px 0px 0px 1px var(--main);
				}
				
				[data-os="macos"] & {
					border-radius: var(--base-radius-size);
					
					@media (width >= 640px) {
						border: 1px solid oklch(from var(--main) l c h / .1);
					}
				}
			}
		}
		
		.noResults {
			& .containerItemList {
				height: 100%;
			}
			
			& thead {
				display: none;
			}
		}
		
		.contextContainerMenu *:last-child {
			border-block-end: none !important;
		}
		
		body:not([data-os="windows"]) .headerList + .containerSection .rounded:first-child {
			@media (width >= 640px) {
				border-block-start: 1px solid var(--divider);
			}
		}


	/* TAB BARS */
		.wrapperTabBar {
			container-type: inline-size;
			position: absolute;
			bottom: 0px;
			left: 0px;
			width: 100%;
		}
		
		.containerTabBar {
			border-block-start: 1px solid var(--divider);
			position: absolute;
			bottom: 0px;
			left: 0px;
			width: 100%;
			height: calc(var(--tabbar-height) + env(safe-area-inset-bottom));
			background: var(--foreground);
			padding: 0px calc(var(--base-gap-size) / 3) env(safe-area-inset-bottom) calc(var(--base-gap-size) / 3);
			display: flex;
			justify-content: space-around;
			align-items: center;
			
			@container (min-width: 640px) {
				--tabbar-height: 55px;
			}
			
			[data-os="android"] & {
				border: none;
			}
			
			[data-os="windows"] & {
				padding-block: 0px;
			}
			
			&.translucent {
				background: oklch(from var(--foreground) l c h / .6);
				-webkit-backdrop-filter: var(--material-translucent-large);
				backdrop-filter: var(--material-translucent-large);
			}
			
			& .tab {
				z-index: 2;
				position: relative;
			}
			
			[data-os="macos"] & {
				background: color-mix(in oklch, var(--main) 0.2%, var(--foreground) );
			}
			
			[data-os="macos"] .columnPrimary & {
				background: none;
			}
			
			[data-os="android"] & {
				background: color-mix(in oklch, var(--accent) 10%, var(--foregroundPrime) );
			}
			
			[data-os="windows"] .columnPrimary & {
				background: none;
			}
		}

	
	/* TOOLBARS */
		.containerToolbar {
			--base-font-size: 16px;
			border-block-end: 1px solid var(--divider);
			position: absolute;
			top: 0px;
			left: 0px;
			width: 100%;
			height: calc(var(--toolbar-height) + env(safe-area-inset-top));
			background: var(--foreground);
			padding: env(safe-area-inset-top) calc(var(--base-gap-size) / 2) 0px calc(var(--base-gap-size) / 2);
			display: grid;
			grid-template-columns: 88px 1fr 88px;
			align-items: center;
			gap: calc(var(--base-gap-size) / 2);
			z-index: 3;
			
			[data-os="macos"] .columnPrimary &:not(.noBackground) {
				background: var(--background);
			}
			
			[data-os="macos"] & {
				grid-template-columns: minmax(88px, auto) 1fr minmax(88px, auto);
			}
			
			[data-os="macos"] &:not(.noBackground) {
				background: color-mix(in oklch, var(--main) 2%, var(--foreground) );
			}
			
			[data-os="android"] & {
				border: none;
				grid-template-columns: auto 1fr 88px;
				background: var(--background);
				
				@media (width >= 1100px) {
					grid-template-columns: 1fr auto 88px;
				}
			}
			
			[data-os="windows"] & {
				border: none;
			}
			
			[data-os="windows"] .columnPrimary & {
				background: none;
			}
			
			[data-os="windows"] &:not(.noBackground) {
				background: var(--background);
			}
			
			[data-os="windows"] dialog & {
				background: none !important;
			}
			
			&.vanishing {
				transition: var(--base-time-length) background ease;
			}
			
			.columnTertiary & {
				padding-inline-start: calc(var(--base-gap-size) / 2) !important;
				padding-inline-end: max(var(--base-gap-size) / 2, env(safe-area-inset-right)) !important;
			}
			
			.fullWidth & {
				padding-inline-start: max(var(--base-gap-size) / 2, env(safe-area-inset-left)) !important;
				padding-inline-end: max(var(--base-gap-size) / 2, env(safe-area-inset-right)) !important;
			}
			
			&.translucent {
				background: oklch(from var(--foreground) l c h / .6);
				-webkit-backdrop-filter: var(--material-translucent-large);
				backdrop-filter: var(--material-translucent-large);
			}
			
			&.noBackground {
				background: none;
				border-block-end: 1px solid transparent;
				/* border-inline-end: 1px solid transparent; */
				transition: var(--base-time-length) background ease, var(--base-time-length) border ease;
			}
			
			& h1 {
				transition: var(--base-time-length) opacity ease;
			}
			
			&.noBackground h1 {
				opacity: 0;
				transition: var(--base-time-length) opacity ease;
			}
			
			&.withAccessory {
				border-block-end: 1px solid transparent;
				
				[data-os="macos"] &, 
				[data-os="android"] &, 
				[data-os="windows"] & {
					border: none;
				}
			}
			
			&.singleItem {
				grid-template-columns: 1fr;
			}
			
			& button {
				padding: calc(var(--base-gap-size) / 2);
			}
			
			& input[type="search"] {
				margin: 0px;
			}
			
			@media (width >= 1100px) and (pointer: fine) {
				grid-template-columns: 1fr auto auto !important;
				gap: 0px !important;
			}
			
			&.alwaysLeft {
				@media (width >= 1100px) and (pointer: fine) {
					grid-template-columns: auto 1fr auto !important;
				}
			}
		}
		
		[data-os="android"] main .containerToolbar:not(.noBackground), 
		[data-os="android"] main .containerAccessoryBar,
		[data-os="android"] dialog .containerToolbar {
			background: var(--foreground);
		}
		
		.dividerBottom {
			border-block-end: 1px solid var(--divider) !important;
			
			[data-os="android"] & {
				border: none !important;
			}
		}
		
		.pinLeft {
			left: calc(var(--base-gap-size) / 2);
			display: flex;
			align-items: center;
			gap: 0px;
		}
		
		.pinRight {
			right: calc(var(--base-gap-size) / 2);
			display: flex;
			justify-content: flex-end;
			align-items: center;
			gap: 0px;
		}
		
		@media (width >= 1100px) and (pointer: fine) {
			dialog .containerToolbar {
				grid-template-columns: 88px 1fr 88px;
			}
			
			dialog .containerToolbar.alwaysLeft {
				grid-template-columns: 88px 1fr 88px;
			}
		}
		
		.containerAccessoryBar {
			--base-font-size: 16px;
			padding: 0px var(--base-gap-size);
			padding-inline-start: max(var(--base-gap-size), env(safe-area-inset-left));
			background: var(--foreground);
			border-block-end: 1px solid var(--divider);
			height: var(--accessorybar-height);
			display: flex;
			align-items: flex-start;
			position: relative;
			
			[data-os="android"] & {
				border: none;
			}
			
			.columnTertiary & {
				padding-inline-start: var(--base-gap-size);
				padding-inline-end: max(var(--base-gap-size), env(safe-area-inset-right));
			}
			
			.fullWidth .columnTertiary & {
				padding-inline-start: max(var(--base-gap-size), env(safe-area-inset-right));
				padding-inline-end: max(var(--base-gap-size), env(safe-area-inset-left));
			}
			
			&.translucent {
				background: oklch(from var(--foreground) l c h / .6);
				-webkit-backdrop-filter: var(--material-translucent-large);
				backdrop-filter: var(--material-translucent-large);
			}
			
			& input {
				margin: 0px !important;
				z-index: 2;
				position: relative;
			}
			
			.containerToolbar + & {
				position: absolute;
				top: calc(var(--toolbar-height) + env(safe-area-inset-top));
				width: 100%;
			}
			
			[data-os="macos"] & {
				background: color-mix(in oklch, var(--main) 2%, var(--foreground) );
			}
			
			[data-os="macos"] .columnPrimary & {
				background: none !important;
			}
			
			[data-os="android"] .columnPrimary &, 
			[data-os="android"] .columnSecondary & {
				background: var(--foreground) !important;
			}
			
			[data-os="windows"] .columnPrimary & {
				background: none;
			}
			
			[data-os="windows"] & {
				background: var(--background);
			}
			
			[data-os="windows"] .columnPrimary & {
				background: none !important;
			}
		}
		
		.containerInlineAccessory {
			width: 100%;
			height: calc(100% - var(--toolbar-height) - env(safe-area-inset-top));
			position: absolute;
			top: calc(var(--toolbar-height) + env(safe-area-inset-top));
			z-index: 1;
			pointer-events: all;
			overflow: auto;
			
			@media (width >= 1100px) {
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0px;
				z-index: 1;
				pointer-events: none;
				overflow: none !important;
			}
			
			&.cropTabBar {
				height: calc(100% - var(--toolbar-height) - var(--tabbar-height) - env(safe-area-inset-top));
				
				@media (width >= 1100px) {
					height: calc(100% - var(--tabbar-height) - env(safe-area-inset-bottom));
				}
			}
			
			& .scrollview {
				overflow: visible;
				top: var(--accessorybar-height);
				
				@media (width >= 1100px) {
					overflow: auto;
					pointer-events: all;
					top: calc(var(--toolbar-height) + env(safe-area-inset-top));
					height: calc(100% - var(--toolbar-height) - env(safe-area-inset-top));
				}
			}
			
			.containerAccessoryBar {
				@media (width >= 1100px) {
					width: 300px;
					height: calc(var(--toolbar-height) + env(safe-area-inset-top));
					border-block-end: 1px solid var(--divider);
					position: absolute;
					top: 0px;
					right: 0px;
					pointer-events: all;
					display: flex;
					align-items: center;
					padding: env(safe-area-inset-top) calc(var(--base-gap-size) / 2) 0px 0px;
					border-block-end: 1px solid var(--divider);
					
					[data-os="windows"] & {
						padding-inline-start: 1px;
						border: none !important;
					}
				}
			}
		}
		
		.withInlineAccessory {
			@media (width >= 1100px) {
				width: calc(100% - 300px);
				border-block-end: 1px solid var(--divider) !important;
			}
		}
		
		@media (width >= 1100px) {
			[data-os="android"] .containerInlineAccessory .containerAccessoryBar, 
			[data-os="android"] .withInlineAccessory, 
			[data-os="windows"] .containerInlineAccessory .containerAccessoryBar, 
			[data-os="windows"] .withInlineAccessory {
				border: none !important;
			}
		}

	
	/* ACCORDIONS */
		.containerAccordion {
			border-radius: var(--base-radius-size);
			overflow: hidden;
			
			[data-os="macos"] &, 
			[data-os="windows"] & {
				border: 1px solid oklch(from var(--main) l c h / .1);
			}
			
			[data-os="windows"] & {
				@media (prefers-color-scheme: dark) {
					border: 1px solid oklch(from var(--main) l c h / .3);
				}
				
				[data-theme="dark"] & {
					border: 1px solid oklch(from var(--main) l c h / .3);
				}
				
				[data-theme="light"] & {
					border: 1px solid oklch(from var(--main) l c h / .1);
				}
			}
			
			[data-contrast="more"] & {
				border: 1px solid var(--divider);
				
				& .headerSection {
					border: none;
				}
			}
			
			.columnSecondary & {
				border: none;
			}
			
			&.hideOverflow {
				overflow: hidden;
			}
			
			&.noBorder {
				border-radius: 0px;
			}
		}
		
		.headerAccordion {
			display: flex;
			justify-content: space-between;
			align-items: center;
			border: none;
			
			& h1,
			& h2,
			& h3,
			& h4,
			& h5,
			& h6 {
				padding: 0px;
				margin: 0px;
			}
			
			&:hover {
				cursor: pointer;
				
				& h1,
				& h2,
				& h3,
				& h4,
				& h5,
				& h6,
				& svg {
					opacity: 0.5;
				}
			}
			
			& .containerChevron {
				width: var(--base-font-size);
				height: var(--base-font-size);
				display: flex;
				justify-content: center;
				align-items: center;
				
				& svg {
					transition: var(--base-time-length) transform ease;
					width: var(--base-font-size);
					height: var(--base-font-size);
				}
				
				[data-os="android"] &, 
				[data-os="windows"] & {
					transform: rotate(90deg);
				}
			}
			
			&.active .containerChevron svg {
				transform: rotate(90deg);
				transition: var(--base-time-length) transform ease;
				
				[data-os="android"] &, 
				[data-os="windows"] & {
					transform: rotate(180deg);
				}
			}
			
			& path {
				fill: oklch(from var(--main) l c h / .3);
				
				[data-contrast="more"] & {
					fill: var(--main);
				}
			}
		}
		
		.containerAccordionContents {
			overflow: hidden;
			padding: 0px;
			display: grid;
			grid-template-rows: 0fr;
			transition: grid-template-rows var(--base-time-length) ease-in-out;
			
			&.active {
				grid-template-rows: 1fr;
			}
			
			& .wrapper {
				overflow: hidden;
			}
			
			& .containerSection:not(.banner) {
				border-radius: 0px 0px var(--base-radius-size) var(--base-radius-size);
				border: none;
				border-block-start: 1px solid var(--divider);
				margin: 0px;
				
				[data-os="windows"] & {
					background: none;
					
					@media (prefers-color-scheme: dark) {
						border-block-start: 1px solid oklch(from var(--main) l c h / .3);
					}
					
					[data-theme="dark"] & {
						border-block-start: 1px solid oklch(from var(--main) l c h / .3);
					}
					
					[data-theme="light"] & {
						border-block-start: 1px solid oklch(from var(--main) l c h / .1);
					}
				}
				
				[data-os="android"] & {
					border-block-start: 1px solid oklch(from var(--accent) l c h / .2);
				}
				
				
			}
		}

	
	/* SCROLLVIEWS */
		.scrollview {
			overflow: auto;
			width: 100%;
			height: 100%;
			position: absolute;
			
			&.cropToolbar {
				height: calc(100% - var(--toolbar-height) - env(safe-area-inset-top));
				top: calc(var(--toolbar-height) + env(safe-area-inset-top));
			}
			
			&.cropAccessoryBar {
				height: calc(100% - var(--accessorybar-height) - env(safe-area-inset-top));
				top: calc(var(--accessorybar-height) + env(safe-area-inset-top));
			}
			
			&.cropTabBar {
				height: calc(100% - var(--tabbar-height) - env(safe-area-inset-bottom));
			}
			
			&.cropToolbar.cropAccessoryBar {
				height: calc(100% - var(--toolbar-height) - var(--accessorybar-height) - env(safe-area-inset-top));
				top: calc(var(--toolbar-height) + var(--accessorybar-height) + env(safe-area-inset-top));
			}
			
			&.cropToolbar.cropTabBar {
				height: calc(100% - var(--toolbar-height) - var(--tabbar-height) - env(safe-area-inset-top) - env(safe-area-inset-bottom));
				top: calc(var(--toolbar-height) + env(safe-area-inset-top));
			}
			
			&.cropToolbar.cropAccessoryBar.cropTabBar {
				height: calc(100% - var(--toolbar-height) - var(--accessorybar-height) - var(--tabbar-height) - env(safe-area-inset-top) - env(safe-area-inset-bottom));
				top: calc(var(--toolbar-height) + var(--accessorybar-height) + env(safe-area-inset-top));
			}
		
			&.insetToolbar {
				padding-block-start: calc(var(--toolbar-height) + env(safe-area-inset-top));
			}
			
			&.insetTabBar {
				padding-block-end: calc(var(--tabbar-height) + env(safe-area-inset-bottom));
			}
		}
		
		dialog .scrollview.cropToolbar {
			height: calc(100% - var(--toolbar-height));
			top: var(--toolbar-height);
		}

	
	/* BLANK STATE */
		.containerBlankState {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 100%;
			height: 100%;
			position: absolute;
		}
		
		.blankStateContents {
			display: flex;
			justify-content: center;
			flex-direction: column;
			align-items: center;
			max-width: 70%;
			
			& svg {
				width: calc(var(--base-font-size) * 7.5);
				height: calc(var(--base-font-size) * 7.5);
				margin-block-end: var(--base-gap-size)
			}
			
			& path {
				fill: oklch(from var(--main) l c h / .2);
				
				[data-contrast="more"] & {
					fill: var(--main);
				}
			}
			
			& h2, 
			& p {
				color: oklch(from var(--main) l c h / .2);
				text-align: center;
				
				[data-contrast="more"] & {
					color: var(--main);
				}
			}
			
			& .containerActions {
				display: flex;
				flex-direction: column;
				gap: calc(var(--base-gap-size)  / 2);
			}
			
			& button {
				align-self: center;
				width: 100%;
			}
		}


	/* TIP JAR */
		#sheetTips {
			padding: var(--base-gap-size);
		}
		
		.containerTipJar {
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			width: 100%;
			max-width: 700px;
			container-type: inline-size;
			
			& img {
				max-width: 100%;
			}
			
			& .containerButtons {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: calc(var(--base-gap-size) / 2);
				width: 100%;
				
				@container (min-width: 250px) {
					display: grid;
					grid-template-columns: repeat(2, 1fr);
				}
			}
			
			& button, 
			& a {
				min-width: 100% !important;
				width: 100%;
				border: none !important;
			}
		}
		
		#miniTipJar {
			border: 1px solid var(--divider);
			border-radius: var(--base-radius-size);
			padding: var(--base-gap-size);
			margin-block-end: var(--base-gap-size);
			position: relative;
			
			/* & #dismiss {
				position: absolute;
				top: calc(var(--base-gap-size) / 4);
				right: calc(var(--base-gap-size) / 4);
				width: auto;
			} */
		}

	
	/* SPINNERS */
		@keyframes rotatingSpinner {
			from {
				transform: rotate(0deg);
			}
			to {
				transform: rotate(360deg);
			}
		}
	
		.containerSpinner {
			width: 100%;
			height: 100%;
			display: flex;
			justify-content: center;
			align-items: center;
			position: absolute;
			z-index: -1;
			
			& .spinner {
				width: calc(var(--base-font-size) * 1.5);
				height: calc(var(--base-font-size) * 1.5);
				animation: rotatingSpinner 2s linear infinite;
				opacity: 0.3;
				
				[data-contrast="more"] & {
					opacity: 1;
				}
				
				& svg {
					width: calc(var(--base-font-size) * 1.5);
					height: calc(var(--base-font-size) * 1.5);
				}
			}
		}

	
	/* IFRAMES */
		iframe {
			border: none;
			width: 100%;
			height: 100%;
			position: absolute;
			
			&.cropToolbar {
				height: calc(100% - var(--toolbar-height) - env(safe-area-inset-top));
				top: calc(var(--toolbar-height) + env(safe-area-inset-top));
			}
			
			&.cropAccessoryBar {
				height: calc(100% - var(--accessorybar-height) - env(safe-area-inset-top));
				top: calc(var(--accessorybar-height) + env(safe-area-inset-top));
			}
			
			&.cropTabBar {
				height: calc(100% - var(--tabbar-height) - env(safe-area-inset-bottom));
			}
			
			&.cropToolbar.cropAccessoryBar {
				height: calc(100% - var(--toolbar-height) - var(--accessorybar-height) - env(safe-area-inset-top));
				top: calc(var(--toolbar-height) + var(--accessorybar-height) + env(safe-area-inset-top));
			}
			
			&.cropToolbar.cropTabBar {
				height: calc(100% - var(--toolbar-height) - var(--tabbar-height) - env(safe-area-inset-top) - env(safe-area-inset-bottom));
				top: calc(var(--toolbar-height) + env(safe-area-inset-top));
			}
			
			&.cropToolbar.cropAccessoryBar.cropTabBar {
				height: calc(100% - var(--toolbar-height) - var(--accessorybar-height) - var(--tabbar-height) - env(safe-area-inset-top) - env(safe-area-inset-bottom));
				top: calc(var(--toolbar-height) + var(--accessorybar-height) + env(safe-area-inset-top));
			}
		}
	

/* CONTROLS */
	/* BUTTONS */
		button {
			/* COMMON STYLES */
				font-family: var(--font-regular);
				margin: 0px;
				border: 0px;
				
				&:hover {
					cursor: pointer;
				}
				
				&.confirm {
					font-weight: bold;
					
					[data-os="windows"] & {
						font-family: var(--font-regular-bold);
						font-weight: 570;
					}
				}
				
				&.disabled {
					opacity: 0.2;
					pointer-events: none;
				}
				
				&.primary {
					--button-background: var(--accent);
					--button-text-open: var(--accent);
					--button-text-fill: white
				}
				
				&.secondary {
					--button-background: oklch(from var(--main) l c h / .1);
					--button-text-open: var(--main);
					--button-text-fill: var(--main);
					
					&:hover {
						background: oklch(from var(--button-background) l c h / .2);
					}
					
					[data-os="macos"] &, 
					[data-os="windows"] & {
						--button-background: var(--systempanel);
						
						&:hover {
							background: oklch(from var(--main) l c h / .1);
						}
					}
				}
				
				&.translucent {
					-webkit-backdrop-filter: var(--material-translucent-small);
					backdrop-filter: var(--material-translucent-small);
					--button-background: oklch(from var(--main) l c h / .3);
					--button-text-open: var(--main);
					--button-text-fill: white;
					
					&:hover {
						background: oklch(from var(--button-background) l c h / .2);
					}
				}
				
				&.destructive {
					--button-background: var(--destructive);
					--button-text-open: var(--destructive);
					--button-text-fill: white;
				}
				
				&.toolbarItem {
					--button-background: var(--accent);
					--button-text-open: var(--accent);
					--button-text-fill: white;
					
					[data-os="macos"] & {
						--button-background: oklch(from var(--main) l c h / .8);
						--button-text-open: oklch(from var(--main) l c h / .8);
						
						&:hover {
							background: oklch(from var(--main) l c h / .05);
						}
					}
					
					[data-os="android"] &, 
					[data-os="windows"] & {
						--button-background: var(--main);
						--button-text-open: var(--main);
						
						&:hover {
							background: oklch(from var(--main) l c h / .05);
						}
					}
					
					[data-os="ios"] &, 
					[data-os="android"] & {
						& svg, 
						& img {
							width: calc(var(--base-font-size) * 1.5);
							height: calc(var(--base-font-size) * 1.5);
						}
					}
					
					[data-os="macos"] &, 
					[data-os="windows"] & {
						& svg, 
						& img {
							width: calc(var(--base-font-size) * 1.2);
							height: calc(var(--base-font-size) * 1.2);
						}
					}
				}
				
				&.excludePadding {
					background: none !important;
					
					&:hover {
						opacity: 0.5;
					}
				}
				
				&.picked {
					pointer-events: none;
				}
			
			/* ACTION BUTTONS */
				&[data-button="action-fill"], 
				&[data-button="action-transparent"], 
				&[data-button="action-circular"] {
					border-radius: calc(var(--base-radius-size) / 2);
					font-size: var(--base-font-size);
					padding: calc(var(--base-gap-size) / 2) var(--base-gap-size);
					display: inline-flex;
					align-items: center;
					justify-content: center;
					gap: calc(var(--base-gap-size) / 2);
					
					&.toolbarItem {
						padding: calc(var(--base-gap-size) / 2);
					}
					
					& svg, 
					& img {
						width: var(--base-font-size);
						height: var(--base-font-size);
						
						.gripper & {
							width: calc(var(--base-font-size) * 0.8);
							height: calc(var(--base-font-size) * 0.8);
						}
					}
					
					[data-os="android"] & {
						border-radius: 100px;
					}
					
					@media (pointer: fine) {
						padding: calc(var(--base-gap-size) / 3) calc(var(--base-gap-size) / 1.5);
					}
					
					.containerContextButton & {
						justify-content: space-between;
					}
				}
				
				&[data-button="action-fill"] {
					background: var(--button-background);
					color: var(--button-text-fill);
					
					[data-contrast="more"] &:not(.secondary, .translucent) {
						color: var(--mainInvert);
						
						&:not(.useInitialFill) path {
							fill: var(--mainInvert);
						}
					}
					
					&:hover {
						background: oklch(from var(--button-background) l c h / .4);
					}
					
					&:not(.useInitialFill) path {
						fill: var(--button-text-fill);
					}
					
					[data-os="macos"] &:not(.translucent) {
						box-shadow: inset 0px 1px 0px 0px light-dark(transparent, oklch(100% 0 0 / .2)), 
									0px 1px 2px light-dark(oklch(from var(--button-background) l c h / .1), transparent),
									0px 0px 0px 1px light-dark(transparent, oklch(0 0 0 / .3)),
									0px 2px 3px light-dark(transparent, oklch(0 0 0 / .3));
						background: linear-gradient(
										180deg, 
										oklch(from var(--button-background) calc(l + 0.05) c h), 
										oklch(from var(--button-background) calc(l - 0.05) c h)
									);
										
						&:hover {
							opacity: 0.5;
						}
						
						&.secondary {
							--button-background: light-dark(white, oklch(100% 0 0 / .2));
							background: var(--button-background);
							box-shadow: inset 0px 1px 0px 0px light-dark(transparent, oklch(100% 0 0 / .2)), 
										0px 0px 0px 1px light-dark(oklch(0 0 0 / .2), oklch(0 0 0 / .3)),
										0px 2px 3px light-dark(oklch(0 0 0 / .1), oklch(0 0 0 / .3));
						}
					}
					
					[data-os="windows"] &:not(.translucent) {
						box-shadow: var(--shadow-tight);
					}
					
					[data-os="macos"] .containerContextButton:not([data-type="popover"]) & {
						padding: calc(var(--base-gap-size) / 6) calc(var(--base-gap-size) / 6) calc(var(--base-gap-size) / 6) calc(var(--base-gap-size) / 2);
						border-radius: calc(var(--base-radius-size) * 0.8);
						color: var(--main);
						
						& path {
							fill: var(--main);
						}
						
						& .gripper {
							aspect-ratio: 1;
							border-radius: 6px;
							width: 24px;
							display: flex;
							justify-content: center;
							align-items: center;
						}
						
						&.primary {
							background: var(--systempanel);
							box-shadow: inset 0px 1px 0px 0px light-dark(transparent, oklch(100% 0 0 / .2)), 
										0px 0px 0px 1px light-dark(oklch(0 0 0 / .2), oklch(0 0 0 / .3)),
										0px 2px 3px light-dark(oklch(0 0 0 / .1), oklch(0 0 0 / .3));
										
							& .gripper {
								box-shadow: inset 0px 1px 0px 0px light-dark(transparent, oklch(100% 0 0 / .2)), 
											0px 1px 2px light-dark(oklch(from var(--button-background) l c h / .1), transparent),
											0px 0px 0px 1px light-dark(transparent, oklch(0 0 0 / .1)),
											0px 2px 3px light-dark(transparent, oklch(0 0 0 / .2));
								background: linear-gradient(
												180deg, 
												lch(from var(--button-background) calc(l + 5) c h), 
												lch(from var(--button-background) calc(l - 10) c h)
											);
								
								& path {
									fill: white;
								}
							}
						}
						
						&.secondary {
							background: none;
							box-shadow: none;
							
							&:not(:hover) .gripper {
								background: oklch(from var(--main) l c h / .1);
								box-shadow: inset 0px 1px 4px oklch(0 0 0 / .1);
							}
							
							&:hover {
								background: var(--systempanel);
								box-shadow: 0px 2px 3px oklch(0 0 0 / .1), 
											0px 0px 0px 1px oklch(0 0 0 / .12), 
											inset 0px 1px 0px 0px oklch(100% 0 0 / .2);
								opacity: 1;
							}
						}
					}
					
					[data-os="windows"] .containerContextButton:not([data-type="popover"]) & {
						&.primary {
							--button-background: var(--systempanel);
							color: var(--main);
							
							& path {
								fill: var(--main);
							}
						}
					}
				}
				
				&[data-button="action-transparent"] {
					background: none;
					color: var(--button-text-open);
					
					&:hover {
						background: oklch(from var(--button-background) l c h / .2);
					}
					
					&:not(.useInitialFill) path {
						fill: var(--button-text-open);
					}
				}
				
				&[data-button="action-circular"] {
					border-radius: calc(var(--base-font-size) * 20);
					width: calc(var(--base-font-size) * 3);
					height: calc(var(--base-font-size) * 3);
					padding: 0px;
					background: var(--button-background);
					
					[data-contrast="more"] &:not(.secondary, .translucent) path {
						fill: var(--mainInvert);
					}
					
					&:hover {
						background: oklch(from var(--button-background) l c h / .4);
					}
					
					&:not(.useInitialFill) path {
						fill: var(--button-text-fill);
					}
					
					[data-os="macos"] &::after {
						border-radius: calc(var(--base-font-size) * 20);
					}
					
					[data-os="macos"] &:not(.translucent) {
						box-shadow: inset 0px 1px 0px 0px light-dark(transparent, oklch(100% 0 0 / .2)), 
									0px 1px 2px light-dark(oklch(from var(--button-background) l c h / .1), transparent),
									0px 0px 0px 1px light-dark(transparent, oklch(0 0 0 / .3)),
									0px 2px 3px light-dark(transparent, oklch(0 0 0 / .3));
						background: linear-gradient(
										180deg, 
										lch(from var(--button-background) calc(l + 5) c h), 
										lch(from var(--button-background) calc(l - 10) c h)
									);
										
						&:hover {
							opacity: 0.5;
						}
						
						&.secondary {
							--button-background: light-dark(white, oklch(100% 0 0 / .2));
							background: var(--button-background);
							box-shadow: inset 0px 1px 0px 0px light-dark(transparent, oklch(100% 0 0 / .2)), 
										0px 0px 0px 1px light-dark(oklch(0 0 0 / .2), oklch(0 0 0 / .3)),
										0px 2px 3px light-dark(oklch(0 0 0 / .1), oklch(0 0 0 / .3));
						}
					}
					
					[data-os="windows"] &:not(.translucent) {
						box-shadow: var(--shadow-tight);
					}
				}
				
				&.collapseAside {
					@media (width < 640px) {
						display: none;
					}
				}
				
				&.back {
					& svg {
						width: calc(var(--base-font-size) * 1.5);
						height: calc(var(--base-font-size) * 1.5);
					}
					
					[data-os="ios"] &, 
					[data-os="macos"] & {
						&.slim svg {
							width: calc(var(--base-font-size) * 0.938);
							height: calc(var(--base-font-size) * 1.5);
						}
					}
					
					@media (width >= 640px) {
						.columnTertiary & {
							display: none;
						}
					}
					
					@media (width >= 1100px) {
						display: none;
					}
				}
			
			/* SIDEBAR ITEM */
				&[data-button="sidebar"] {
					background: none;
					color: var(--main);
					font-size: var(--base-font-size);
					padding: calc(var(--base-gap-size) / 2);
					text-align: left;
					display: inline-flex;
					justify-content: space-between;
					align-items: center;
					position: relative;
					border-radius: calc(var(--base-radius-size) / 2);
					width: 100%;
					
					[data-os="ios"] & {
						border-radius: var(--base-radius-size);
						
						&:not(.useInitialFill) path {
							fill: var(--accent);
						}
					}
					
					[data-os="macos"] & {
						&:not(.useInitialFill) path {
							fill: var(--accent);
						}
					}
					
					[data-os="android"] & {
						border-radius: 100px;
						padding-inline: var(--base-gap-size) !important;
						color: var(--main);
						
						&:not(.useInitialFill) path {
							fill: var(--main);
						}
					}
					
					[data-os="windows"] & {
						padding-inline: calc(var(--base-gap-size) / 1.5);
						
						&:not(.useInitialFill) path {
							fill: var(--main);
						}
					}
					
					& svg, 
					& img {
						margin-inline-end: calc(var(--base-gap-size) / 2);
						width: calc(var(--base-font-size) * 1.5);
						height: calc(var(--base-font-size) * 1.5);
						min-width: calc(var(--base-font-size) * 1.5);
						min-height: calc(var(--base-font-size) * 1.5);
						
						[data-os="macos"] &, 
						[data-os="windows"] &  {
							margin-inline-end: calc(var(--base-gap-size) / 1.7);
							width: var(--base-font-size);
							height: var(--base-font-size);
							min-width: var(--base-font-size);
							min-height: var(--base-font-size);
						}
					}
					
					
					& .labelSidebar {
						display: flex;
						align-items: center;
					}
					
					&:hover {
						background: oklch(from var(--main) l c h / .05);
						
						[data-os="android"] & {
							background: oklch(from var(--accent) l c h / .2);
						}
						
						[data-contrast="more"] & {
							background: oklch(from var(--main) l c h / .2);
						}
					}
					
					&.picked, 
					&.picked:hover {
						pointer-events: none;
						
						[data-os="ios"] & {
							color: var(--accent);
							background: var(--systempanel);
							box-shadow: var(--shadow-wide);
							
							&:not(.useInitialFill) path {
								fill: var(--accent);
							}
							
							[data-contrast="more"] & {
								color: var(--main);
								
								&:not(.useInitialFill) path {
									fill: var(--main);
								}
							}
						}
						
						[data-os="macos"] & {
							color: white;
							background: var(--accent);
							
							&:not(.useInitialFill) path {
								fill: white;
							}
						}
						
						[data-os="android"] & {
							background: oklch(from var(--accent) l c h / .2);
							color: var(--main);
							
							&:not(.useInitialFill) path {
								fill: var(--main);
							}
						}
						
						[data-os="windows"] & {
							padding-inline: calc(var(--base-gap-size) / 1.5);
							background: oklch(from var(--main) l c h / .05);
							color: var(--main);
							
							&::after {
								content: '';
								width: 3px;
								height: calc(100% - 12px);
								background: var(--accent);
								position: absolute;
								left: 0px;
								border-radius: 2px;
							}
							
							&:not(.useInitialFill) path {
								fill: var(--main);
							}
						}
					}
					
					&.subdued, 
					&.subdued:hover {
						pointer-events: none;
						
						[data-os="ios"] & {
							background: oklch(from var(--main) l c h / .05);
							color: var(--accent);
							box-shadow: none;
							
							&:not(.useInitialFill) path {
								fill: var(--accent);
							}
							
							[data-contrast="more"] & {
								background: oklch(from var(--main) l c h / .2);
							}
						}
						
						[data-os="macos"] & {
							background: oklch(from var(--main) l c h / .05);
							color: var(--main);
							
							&:not(.useInitialFill) path {
								fill: var(--accent);
							}
							
							[data-contrast="more"] & {
								background: oklch(from var(--main) l c h / .2);
							}
						}
					}
				}
			
			/* SEGMENT */
				&[data-button="segment"] {
					background: none;
					color: var(--main);
					font-size: calc(var(--base-font-size) * 0.8);
					padding: calc(var(--base-gap-size) / 3);
					
					[data-os="ios"] &, 
					[data-os="macos"] & {
						border-inline-start: 1px solid oklch(from var(--main) l c h / .1);
					}
					
					[data-os="android"] & {
						border: 1px solid transparent;
					}
					
					[data-os="windows"] & {
						padding-block: calc(var(--base-gap-size) / 2);
						position: relative;
					}
					
					&:hover {
						background: oklch(from var(--main) l c h / .05);
						border-radius: calc(var(--base-radius-size) / 2);
						
						[data-contrast="more"] & {
							background: var(--main);
							color: white;
							
							& path {
								fill: white;
							}
						}
						
						[data-os="android"] & {
							background: none;
							box-shadow: inset 0px -2px 0px 0px oklch(from var(--accent) l c h / .4);
							border-radius: 0px;
							
							[data-contrast="more"] & {
								color: var(--main);
								box-shadow: inset 0px -2px 0px 0px var(--accent);
							}
						}
						
						[data-os="android"] .split &:hover {
							background: oklch(from var(--accent) l c h / .1);
							box-shadow: none;
							border-radius: calc(var(--base-radius-size) / 2);
						}
					}
					
					[data-os="windows"] .controlSegmented:not(.display, .split) &:hover {
						&::after {
							content: '';
							width: 30%;
							height: 3px;
							background: oklch(from var(--accent) l c h / .2);
							position: absolute;
							left: 35%;
							bottom: 0px;
							border-radius: 20px;
						}
					}
					
					&.picked {
						background: var(--systempanel-lift);
						box-shadow: 0px 1px 2px oklch(0 0 0 / .2);
						pointer-events: none;
						border-radius: calc(var(--base-radius-size) / 2);
						border-inline-start: 1px solid transparent;
						
						[data-os="android"] & {
							background: none;
							box-shadow: none;
							border-radius: 0px;
							box-shadow: inset 0px -2px 0px 0px var(--accent);
							border: 1px solid transparent;
						}
						
						.split & {
							background: oklch(from var(--main) l c h / .1);
							box-shadow: none;
							
							[data-os="android"] & {
								background: oklch(from var(--accent) l c h / .4);
								box-shadow: none;
								border-radius: calc(var(--base-radius-size) / 2);
							}
							
							[data-contrast="more"] & {
								background: var(--main);
								color: white;
								
								& path {
									fill: white;
								}
							}
						}
						
						.display &,
						.display &:hover {
							color: black;
							box-shadow: var(--shadow-wide);
							border: 1px solid transparent;
							background: white;
							
							[data-os="android"] & {
								color: var(--main);
								box-shadow: none;
								background: oklch(from var(--accent) l c h / .6);
							}
						}
						
						[data-contrast="more"] & {
							border: 1px solid var(--main);
						}
					}
					
					[data-os="windows"] .controlSegmented:not(.split, .display) &.picked {
						position: relative;
						
						&::after {
							content: '';
							width: 30%;
							height: 3px;
							background: var(--accent);
							position: absolute;
							left: 35%;
							bottom: 0px;
							border-radius: 20px;
						}
					}
					
					.display & {
						color: oklch(100% 0 0 / .8);
						font-size: var(--base-font-size);
						font-weight: 700;
						border-radius: 100px;
						border: 1px solid transparent;
						
						[data-os="ios"] &.picked {
							color: var(--accent);
							
							& path {
								fill: var(--accent);
							}
							
							[data-contrast="more"] & {
								color: black;
								
								& path {
									fill: black;
								}
							}
						}
						
						[data-os="android"] & {
							color: var(--main);
							border-radius: 100px;
							
							[data-contrast="more"] &.picked {
								color: white;
								
								& path {
									fill: white;
								}
							}
						}
						
						[data-os="windows"] & {
							font-family: var(--font-regular-bold);
							font-weight: 570;
						}
						
						[data-contrast="more"] & {
							color: white;
							
							& path {
								fill: white;
							}
							
							&.picked {
								color: black;
								
								& path {
									fill: black;
								}
							}
						}
						
						&:hover {
							background: oklch(100% 0 0 / .2);
							
							[data-os="android"] & {
								background: oklch(from var(--accent) l c h / .1);
								box-shadow: none;
							}
						}
					}
					
					&.picked + button, 
					&:first-child, 
					&:hover, 
					&:hover + button {
						border-inline-start: 1px solid transparent;
					}
					
					& svg, 
					& img {
						width: calc(var(--base-font-size) * 1.5);
						height: calc(var(--base-font-size) * 1.5);
					}
					
					& svg path {
						fill: var(--main);
						
						.display & {
							fill: oklch(100% 0 0 / .8);
						}
						
						[data-os="android"] & {
							fill: var(--main);
						}
					}
					
					.display &.picked svg path {
						fill: black;
						
						[data-os="android"] & {
							fill: var(--main);
						}
					}
				}

			/* TAB */
				&[data-button="tab"] {
					color: oklch(from var(--main) l c h / .3);
					flex-direction: column;
					font-size: 14px;
					width: 80px;
					border-radius: calc(var(--base-radius-size) / 2);
					padding: calc(var(--base-gap-size) / 2) var(--base-gap-size);
					display: inline-flex;
					align-items: center;
					justify-content: center;
					gap: calc(var(--base-gap-size) / 4);
					background: none;
					position: relative;
					
					[data-os="android"] & {
						color: oklch(from var(--main) l c h / .5);
					}
					
					[data-os="windows"] & {
						height: 100%;
					}
					
					[data-contrast="more"] & {
						color: var(--main);
					}
					
					[data-os="android"] & .wrapper {
						position: relative;
						width: calc(100% + 20px);
						padding: 4px;
						border-radius: 100px;
						display: flex;
						justify-content: center;
						align-items: center;
					}
					
					[data-os="android"] &.picked .wrapper {
						background: oklch(from var(--accent) l c h / .2);
						
						[data-contrast="more"] & {
							background: var(--accent);
						}
					}
					
					& svg, 
					& img {
						width: 24px;
						height: 24px;
						min-width: 24px;
						min-height: 24px;
					}
					
					& svg path {
						fill: oklch(from var(--main) l c h / .3);
						
						[data-os="android"] & {
							fill: oklch(from var(--main) l c h / .5);
						}
						
						[data-contrast="more"] & {
							fill: var(--main);
						}
						
						[data-contrast="more"][data-os="android"] & {
							fill: oklch(from var(--main) l c h / .8);
						}
					}
					
					&:hover {
						background: oklch(from var(--main) l c h / .05);
						
						[data-contrast="more"] & {
							background: oklch(from var(--main) l c h / .1);
							color: var(--main);
							
							& path {
								fill: var(--main);
							}
						}
						
						[data-os="android"] &, 
						[data-os="windows"] & {
							background: none;
						}
						
						[data-os="android"] & .wrapper {
							background: oklch(from var(--accent) l c h / .2);
							
							[data-contrast="more"] & {
								background: var(--accent);
							}
						}
					}
					
					[data-os="windows"] &:hover::after {
						content: '';
						width: 70%;
						height: 3px;
						background: oklch(from var(--accent) l c h / .4);
						position: absolute;
						left: 15%;
						top: 0px;
						border-radius: 20px;
					}
					
					&.picked, 
					&.picked:hover {
						color: var(--accent);
						pointer-events: none;
						background: none;
					}
					
					[data-os="android"] &.picked, 
					[data-os="android"] &.picked:hover {
						color: var(--main);
					}
					
					[data-os="windows"] &.picked, 
					[data-os="windows"] &.picked:hover {
						color: var(--main);
						pointer-events: none;
						background: none;
					}
					
					[data-os="windows"] &.picked::after {
						content: '';
						width: 70%;
						height: 3px;
						background: var(--accent);
						position: absolute;
						left: 15%;
						top: 0px;
						border-radius: 20px;
					}
					
					&.picked path, 
					&.picked:hover path {
						fill: var(--accent);
						
						[data-contrast="more"] & {
							fill: var(--accent);
						}
						
						[data-os="android"] &, 
						[data-os="windows"] & {
							fill: var(--main);
						}
					}
					
					[data-contrast="more"][data-os="android"] &.picked path, 
					[data-contrast="more"][data-os="android"] &.picked:hover path {
						fill: white !important;
					}
					
					@container (min-width: 640px) {
						body:not([data-os="android"]) .containerTabBar & {
							flex-direction: row;
							gap: calc(var(--base-gap-size) / 2);
							align-items: center;
							justify-content: center;
							width: auto;
						}
						
						.containerTabBar & svg, 
						.containerTabBar & img {
							margin-block-end: 0px;
						}
					}
				}
			
			/* SWITCH */
				/* &[data-button="switch"] {
					height: calc((var(--base-font-size) * 1.5) + calc(var(--base-font-size) / 4));
					max-height: calc((var(--base-font-size) * 1.5) + calc(var(--base-font-size) / 4));
					width: calc(var(--base-font-size) * 3);
					min-width: calc(var(--base-font-size) * 3) !important;
					border-radius: calc(var(--base-radius-size) * 20);
					padding: 0px;
					position: relative;
					transition: var(--base-time-length) background ease;
					display: inline-block;
					white-space: nowrap;
					border: none;
					--switch-background: pink;
					
					[data-os="android"] & {
						height: calc((var(--base-font-size) * 1.8) + calc(var(--base-font-size) / 4));
						max-height: calc((var(--base-font-size) * 1.8) + calc(var(--base-font-size) / 4));
						width: calc(var(--base-font-size) * 3.5);
						min-width: calc(var(--base-font-size) * 3.5) !important;
					}
					
					&.on {
						transition: var(--base-time-length) background ease;
						
						[data-os="ios"] & {
							--switch-background: var(--positive);
							background: var(--switch-background);
							
							[data-contrast="more"] &::before {
								box-shadow: 0px 0px 0px 1px light-dark(transparent, oklch(0 0 0 / .2));
							}
						}
						
						[data-os="macos"] & {
							--switch-background: var(--accent);
						}
						
						[data-os="macos"] &::after {
							content: '';
							width: 100%;
							height: 100%;
							position: absolute;
							top: 0px;
							left: 0px;
							border-radius: calc(var(--base-radius-size) * 20);
							box-shadow: inset 0px 1px 2px oklch(0 0 0 / .1), 
										inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1) !important;
							background: linear-gradient(
								180deg, 
								lch(from var(--switch-background) calc(l - 10) c h), 
								lch(from var(--switch-background) calc(l + 5) c h)
							);
							transition: var(--base-time-length) opacity ease;
						}
						
						[data-os="android"] &, 
						[data-os="windows"] & {
							--switch-background: var(--accent);
							background: var(--switch-background);
						}
					}
					
					&.off {
						background: oklch(from var(--main) l c h / .1);
						transition: var(--base-time-length) background ease;
						
						[data-os="ios"] & {
							[data-contrast="more"] &::before {
								box-shadow: 0px 0px 0px 1px light-dark(transparent, oklch(0 0 0 / .2));
							}
						}
						
						[data-os="macos"] & {
							--switch-background: var(--accent);
							box-shadow: inset 0px 1px 2px oklch(0 0 0 / .1), 
										inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1) !important;
						}
						
						[data-os="macos"] &::after {
							content: '';
							width: 100%;
							height: 100%;
							position: absolute;
							top: 0px;
							left: 0px;
							border-radius: calc(var(--base-radius-size) * 20);
							background: linear-gradient(
								180deg, 
								lch(from var(--switch-background) calc(l - 10) c h), 
								lch(from var(--switch-background) calc(l + 5) c h)
							);
							opacity: 0;
							transition: var(--base-time-length) opacity ease;
						}
						
						[data-os="android"] & {
							background: oklch(from var(--main) l c h / .1);
							border: 2px solid oklch(from var(--main) l c h / .4);
						}
						
						[data-os="windows"] & {
							box-shadow: inset 0px 0px 0px 1px oklch(from var(--main) l c h / .2);
							background: oklch(from var(--main) l c h / .05);
						}
						
						[data-contrast="more"] & {
							background: oklch(from var(--main) l c h / .4);
							transition: var(--base-time-length) background ease;
						}
						
						&:hover {
							background: oklch(from var(--main) l c h / .15);
						}
						
						&::before {
							left: 0px;
							transition: var(--base-time-length) left ease;
						}
					}
					
					&::before {
						content: '';
						height: calc(100% - (var(--base-font-size) / 3));
						margin: calc(var(--base-font-size) / 6);
						aspect-ratio: 1;
						background: white;
						border-radius: calc(var(--base-radius-size) * 20);
						position: absolute;
						top: 0px;
						left: calc(var(--base-font-size) * 1.25);
						transition: var(--base-time-length) left ease;
						z-index: 2;
					}
					
					[data-os="macos"] &::before {
						box-shadow: 0px 1px 2px oklch(0 0 0 / .1);
					}
					
					[data-os="android"] &::before {
						background: light-dark(
							var(--mainInvert), 
							var(--main)
						);
						height: calc((var(--base-font-size) * 1) + calc(var(--base-font-size) / 4));
						top: calc(var(--base-font-size) / 4);
						left: calc(var(--base-font-size) * 1.6);
					}
					
					[data-os="android"] &.off::before {
						background: oklch(from var(--main) l c h / .6);
						top: calc(var(--base-font-size) / 4.5);
						left: calc(var(--base-font-size) / 4);
						height: calc((var(--base-font-size) * 1) + calc(var(--base-font-size) / 8));
					}
					
					[data-os="windows"] &::before {
						background: var(--foreground);
					}
					
					[data-os="windows"] &.off::before {
						background: oklch(from var(--main) l c h / .5);
					}
					
					[data-os="macos"] &, 
					[data-os="windows"] & {
						width: calc(var(--base-font-size) * 2.3);
						min-width: calc(var(--base-font-size) * 2.3) !important;
						height: calc((var(--base-font-size) * 1) + calc(var(--base-font-size) / 4));
						
						&.on::before {
							left: calc(var(--base-font-size) * 1.05);
							margin: calc(var(--base-font-size) / 8);
							height: calc(100% - (var(--base-font-size) / 4));
						}
					}
				} */
				
			/* CONTEXT MENU ITEM */
				&[data-button="menu-item"] {
					background: none;
					font-size: var(--base-font-size);
					display: flex;
					justify-content: flex-start;
					align-items: center;
					gap: calc(var(--base-gap-size) / 2);
					text-align: left;
					position: relative;
					width: 100%;
					color: var(--main);
					
					& .label {
						width: 100%;
					}
					
					& svg, 
					& img {
						width: calc(var(--base-font-size) * 1.2);
						height: calc(var(--base-font-size) * 1.2);
					}
					
					& path {
						fill: var(--main);
					}
					
					&.destructive {
						color: var(--destructive);
						
						& path {
							fill: var(--destructive);
						}
					}
					
					[data-os="ios"] & {
						padding: calc(var(--base-gap-size) / 2);
						border-block-end: 1px solid oklch(from var(--main) l c h / .1);
						
						/* &:not(:last-child) {
							border-block-end: 1px solid oklch(from var(--main) l c h / .1);
						} */
						
						/* &:first-child {
							border-block-start: 1px solid transparent;
						} */
						
						&:hover {
							background: oklch(from var(--main) l c h / .05);
						}
						
						[data-type="picker"] &, 
						[data-type="pickericons"] & {
							padding-inline-start: calc(var(--base-gap-size) * 1.7);
						}
						
						&.picked::before {
							content: '';
							width: var(--base-font-size);
							height: var(--base-font-size);
							position: absolute;
							left: calc(var(--base-gap-size) / 2);
							background-image: var(--image-tick);
							background-size: cover;
						}
						
						& svg, 
						& img {
							width: calc(var(--base-font-size) * 1.5);
							height: calc(var(--base-font-size) * 1.5);
						}
					}
					
					[data-os="macos"] & {
						padding: calc(var(--base-gap-size) / 4) calc(var(--base-gap-size) / 2);
						
						& svg, 
						& img {
							order: -1;
						}
						
						&:hover {
							background: var(--accent);
							border-radius: calc(var(--base-radius-size) / 2);
							color: white;
							
							& svg {
								color-scheme: dark;
							}
						}
						
						&.destructive:hover {
							background: var(--destructive);
							
							& path {
								fill: white;
							}
						}
						
						[data-type="picker"] &, 
						[data-type="pickericons"] & {
							padding-inline-start: calc(var(--base-gap-size) * 1.7);
						}
						
						&.picked::before {
							content: '';
							width: var(--base-font-size);
							height: var(--base-font-size);
							position: absolute;
							left: calc(var(--base-gap-size) / 2);
							background-image: var(--image-tick);
							background-size: cover;
						}
						
						&.picked:hover::before {
							background-image: url("images/tick-dark.svg");
						}
					}
					
					[data-os="android"] & {
						padding: calc(var(--base-gap-size) / 2);
						
						&:hover {
							background: oklch(from var(--main) l c h / .1);
						}
						
						& svg, 
						& img {
							width: calc(var(--base-font-size) * 1.5);
							height: calc(var(--base-font-size) * 1.5);
							order: -1;
						}
					}
					
					[data-os="windows"] & {
						padding: calc(var(--base-gap-size) / 2);
						font-size: calc(var(--base-font-size) * 0.9);
						
						&:hover {
							background: oklch(from var(--main) l c h / .05);
							border-radius: calc(var(--base-radius-size) / 2);
						}
						
						&.picked {
							background: oklch(from var(--main) l c h / .05);
							border-radius: calc(var(--base-radius-size) / 2);
							
							&::after {
								content: '';
								width: 3px;
								height: calc(100% - 12px);
								background: var(--accent);
								position: absolute;
								left: 0px;
								top: 6px;
								border-radius: 2px;
							}
						}
						
						& svg, 
						& img {
							order: -1;
						}
					}
				}
				
			/* CLOSE */
				&[data-button="close"] {
					border-radius: calc(var(--base-font-size) * 20);
					position: absolute;
					top: max(var(--base-gap-size) / 2, env(safe-area-inset-top));
					right: max(var(--base-gap-size) / 2, env(safe-area-inset-right));
					width: calc(var(--base-font-size) * 2);
					height: calc(var(--base-font-size) * 2);
					padding: 0px;
					z-index: 3;
					background: oklch(0 0 0 / .3);
					display: flex;
					justify-content: center;
					align-items: center;
					
					[data-contrast="more"] & {
						border: 1px solid white;
					}
					
					&:hover {
						background: oklch(0 0 0 / .3);
						opacity: 0.5;
					}
					
					& svg {
						width: var(--base-font-size);
						height: var(--base-font-size);
					}
					
					& path {
						fill: white;
					}
					
					.backingPanel & {
						--main: oklch(64.9% 0.299 29);
					}
				}
				
			/* TOKEN */
				&[data-button="token"] {
					background: none;
					border: 1px solid var(--divider);
					color: var(--main);
					border-radius: calc(var(--base-radius-size) * 20);
					display: inline-block;
					padding: calc(var(--base-gap-size) / 2) calc(var(--base-font-size) * 0.9);
					font-family: var(--font-regular);
					font-size: calc(var(--base-font-size) * 0.9);
					text-align: center;
					overflow: hidden;
					white-space: nowrap;
					text-overflow: ellipsis;
					
					[data-os="android"] & {
						border: 1px solid oklch(from var(--main) l c h / .2);
						border-radius: calc(var(--base-radius-size) / 4);
					}
					
					[data-contrast="more"] & {
						border: 1px solid var(--divider);
					}
					
					&:hover {
						cursor: pointer;
						background: oklch(from var(--main) l c h / .2);
						border: 1px solid transparent;
						
					}
					
					&.picked {
						background: var(--accent);
						color: white;
						border: 1px solid transparent;
						
						[data-os="android"] & {
							background: oklch(from var(--accent) l c h / .6);
							color: var(--main);
							border: 1px solid transparent;
						}
					}
				}
				
			/* DISPLAY OPTIONS TILE */
				&[data-button="display-tile"] {
					background: none;
					box-shadow: inset 0px 0px 0px 1px var(--divider);
					border-radius: var(--base-radius-size);
					display: flex;
					flex-direction: column;
					align-items: center;
					gap: calc(var(--base-gap-size) / 2);
					font-size: var(--base-font-size);
					padding: var(--base-gap-size);
					color: var(--main);
					
					[data-os="macos"] & {
						box-shadow: inset 0px 0px 0px 1px oklch(from var(--main) l c h / .2);
					}
					
					&:hover {
						background: oklch(from var(--main) l c h / .05);
					}
					
					&.picked {
						box-shadow: inset 0px 0px 0px 3px var(--accent);
						pointer-events: none;
						
						[data-contrast="more"] & {
							box-shadow: none;
							background: var(--divider);
							color: var(--mainInvert);
						}
					}
					
					& svg {
						width: calc(var(--base-font-size) * 2);
						height: calc(var(--base-font-size) * 2);
					}
					
					& path {
						fill: var(--main);
						
						.picked & {
							fill: var(--accent);
							
							[data-contrast="more"] & {
								fill: var(--mainInvert);
							}
						}
					}
				}
				
				&[data-button="display-row"] {
					background: none;
					box-shadow: inset 0px 0px 0px 1px var(--divider);
					border-radius: var(--base-radius-size);
					display: flex;
					justify-content: space-between;
					align-items: center;
					padding: var(--base-gap-size);
					font-size: var(--base-font-size);
					height: calc(var(--base-font-size) * 4);
					color: var(--main);
					
					[data-os="macos"] & {
						box-shadow: inset 0px 0px 0px 1px oklch(from var(--main) l c h / .2);
					}
					
					&:hover {
						background: oklch(from var(--main) l c h / .05);
					}
					
					&.picked {
						box-shadow: inset 0px 0px 0px 3px var(--accent);
						pointer-events: none;
						
						[data-contrast="more"] & {
							box-shadow: none;
							background: var(--divider);
							color: var(--mainInvert);
						}
						
						&:first-child {
							color: var(--accent);
						}
					}
					
					& span:first-child {
						text-align: left;
					}
					
					& span:last-child {
						text-align: right;
						
						@container (max-width: 400px) {
							text-align: left;
						}
					}
					
					@container (max-width: 400px) {
						display: grid;
						flex-direction: column;
						align-items: flex-start;
						gap: calc(var(--base-gap-size) / 4);
						height: auto;
					}
				}
		}
		
		/* ITEM LIST */
			[data-button="item-flat"], 
			[data-button="item-rounded"] {
				display: flex;
				align-items: center;
				gap: calc(var(--base-gap-size) / 2);
				width: 100%;
				font-family: var(--font-regular);
				font-size: var(--base-font-size);
				text-align: left;
				color: var(--main);
				
				button& {
					justify-content: flex-start;
				}
				
				div& {
					justify-content: space-between;
				}
				
				& .containerLeading {
					display: flex;
					align-items: center;
					gap: calc(var(--base-gap-size) / 2);
				}
				
				[data-os="ios"] &, 
				[data-os="macos"] & {
					padding: calc(var(--base-gap-size) / 2);
				}
				
				[data-os="android"] & {
					padding: var(--base-gap-size);
				}
				
				[data-os="windows"] & {
					padding: var(--base-gap-size);
				}
				
				button&:not(.picked) {
					background-image: var(--image-arrow-forward);
					background-repeat: no-repeat;
					background-position: right var(--base-gap-size) center;
					background-size: 10px 16px;
					
					@media (width >= 640px) {
						background-image: none;
					}
					
					&:hover {
						background-color: oklch(from var(--main) l c h / .05);
					}
				}
				
				&.picked {
					pointer-events: none;
					
					&:hover {
						background-color: var(--accent);
					}
				}
				
				& .label {
					display: flex;
					flex-direction: column;
					gap: calc(var(--base-font-size) / 4);
					/* width: 100%; */
				}
			}
			
			[data-button="item-flat"] {
				border-block-start: 1px solid var(--divider);
				
				&:not(.picked) {
					background-color: transparent;
				}
				
				&.picked {
					background-color: oklch(from var(--accent) l c h / .1);
				}
				
				&:first-child {
					border-block-start: 1px solid transparent;
				}
				
				[data-os="ios"] &, 
				[data-os="macos"] & {
					& path {
						fill: var(--accent);
					}
				}
				
				[data-os="android"] &, 
				[data-os="windows"] & {
					& path {
						fill: var(--main);
					}
				}
			}
			
			[data-button="item-rounded"] {
				&:not(.picked) {
					background-color: transparent;
					
					[data-os="ios"] &, 
					[data-os="macos"] & {
						border-block-start: 1px solid var(--divider);
						
						@media (width < 640px) {
							&:first-child {
								border-block-start: 1px solid transparent;
							}
						}
						
						@media (width >= 640px) {
							*:not(.containerSection) > &:first-child {
								border-block-start: 1px solid transparent;
							}
							
							.containerSection > &:last-child:not(:hover) {
								border-block-end: 1px solid var(--divider);
							}
						}
						
						button&:hover {
							border-block-start: 1px solid transparent;
							
							& + [data-button="item-rounded"] {
								border-block-start: 1px solid transparent;
							}
							
							@media (width >= 640px) {
								border-radius: var(--base-radius-size);
							}
							
							[data-contrast="more"] & {
								box-shadow: inset 0px 0px 0px 1px var(--divider);
							}
						}
						
						& path {
							fill: var(--accent);
						}
					}
					
					[data-os="android"] & {
						border-block-start: 1px solid transparent;
						background: light-dark(
										oklch(100% 0 0 / .8), 
										oklch(100% 0 0 / .2)
									);
									
						[data-contrast="more"] & {
							border: 1px solid var(--divider);
						}
						
						&:first-child {
							border-radius: var(--base-radius-size) var(--base-radius-size) calc(var(--base-radius-size) / 5) calc(var(--base-radius-size) / 5) !important;
						}
						
						&:last-child {
							border-radius: calc(var(--base-radius-size) / 5) calc(var(--base-radius-size) / 5) var(--base-radius-size) var(--base-radius-size) !important;
						}
						
						&:only-child {
							border-radius: var(--base-radius-size) !important;
						}
						
						button&:hover {
							background-color: oklch(from var(--accent) l c h / .2);
						}
						
						& path {
							fill: var(--main);
						}
					}
					
					[data-os="windows"] & {
						border: 1px solid var(--divider);
						border-radius: calc(var(--base-radius-size) / 2);
						margin-block-end: calc(var(--base-gap-size) / 4);
						background-color: var(--systempanel);
						
						button&:hover {
							background-color: color-mix(in oklch, var(--accent) 5%, var(--systempanel)) ;
							
							[data-contrast="more"] & {
								background-color: color-mix(in oklch, var(--accent) 20%, var(--systempanel)) ;
							}
						}
						
						& path {
							fill: var(--main);
						}
					}
				}
				
				&.picked {
					border-block-start: 1px solid transparent;
					border-radius: var(--base-radius-size);
					
					[data-os="ios"] &, 
					[data-os="macos"] & {
						background-color: var(--accent);
						color: white;
						
						& path {
							fill: light-dark(white, black);
						}
						
						& + [data-button] {
							border-block-start: 1px solid transparent;
						}
						
						[data-contrast="more"] & {
							color: var(--mainInvert);
						}
					}
					
					[data-os="android"] & {
						background-color: light-dark(
											oklch(100% 0 0 / .3), 
											oklch(100% 0 0 / .1)
										);
						color: var(--main);
						
						[data-contrast="more"] & {
							border: 1px solid var(--divider);
							background-color: oklch(from var(--accent) l c h / .3);
						}
						
						&:first-child {
							border-radius: var(--base-radius-size) var(--base-radius-size) calc(var(--base-radius-size) / 5) calc(var(--base-radius-size) / 5) !important;
						}
						
						&:last-child {
							border-radius: calc(var(--base-radius-size) / 5) calc(var(--base-radius-size) / 5) var(--base-radius-size) var(--base-radius-size) !important;
						}
						
						& path {
							fill: var(--main);
						}
					}
					
					[data-os="windows"] & {
						background: var(--systempanel);
						border: 1px solid var(--divider);
						border-radius: calc(var(--base-radius-size) / 2);
						margin-block-end: calc(var(--base-gap-size) / 4);
						position: relative;
						
						&::after {
							content: '';
							width: 3px;
							height: calc(100% - 18px);
							background: var(--accent);
							position: absolute;
							left: 0px;
							border-radius: 2px;
						}
						
						[data-contrast="more"] &::after {
							content: '';
							width: 6px;
							border-radius: 20px;
						}
						
						& path {
							fill: var(--main);
						}
					}
				}
				
				& .containerIcon {
					display: flex;
					justify-content: center;
					align-items: center;
				}
				
				[data-os="ios"] &, 
				[data-os="macos"] & {
					& .containerIcon {
						padding: calc(var(--base-gap-size) / 3);
						border-radius: calc(var(--base-radius-size) / 1.5);
						
						& path {
							fill: white;
						}
					}
				}
				
				[data-os="ios"] & {
					& .containerIcon {
						--icon-gradient-top: light-dark(
												var(--icon-container), 
												white
											);
						--icon-gradient-bottom: light-dark(
													var(--icon-container), 
													black
												);
						--icon-background: light-dark(
												var(--icon-container), 
												oklch(18.2% 0 0)
											);
						
						background: linear-gradient(
							180deg, 
							color-mix(in oklch, var(--icon-gradient-top) 20%, var(--icon-background) ), 
							color-mix(in oklch, var(--icon-gradient-bottom) 50%, var(--icon-background) )
						);
						box-shadow: inset 0px 0px 0px 1px light-dark(transparent, oklch(100% 0 0 / .15));
						
						& path {
							fill: light-dark(
									white, 
									var(--icon-container)
								);
						}
						
						[data-contrast="more"] & {
							background: lch(from var(--icon-container) calc(l - 150) c h);
							
							& path {
								fill: lch(from var(--icon-container) calc(l + 60) c h);;
							}
						}
					}
				}
				
				[data-os="macos"] & {
					& .containerIcon {
						background: linear-gradient(
							180deg, 
							lch(from var(--icon-container) calc(l + 5) c h), 
							lch(from var(--icon-container) calc(l - 10) c h)
						);
						box-shadow: 0px 1px 1px oklch(0 0 0 / 0.3);
						
						& svg {
							filter: drop-shadow(0px 1px 1px oklch(0 0 0 / 0.3));
						}
						
						[data-contrast="more"] & {
							background: linear-gradient(
								180deg, 
								lch(from var(--icon-container) calc(l - 10) c h), 
								lch(from var(--icon-container) calc(l - 30) c h)
							);
						}
					}
				}
				
				[data-os="android"] & {
					margin-block-end: 2px;
					border-radius: calc(var(--base-radius-size) / 5) !important;
				}
			}
			
			[data-icon-size="auto"] {
				& svg, 
				& img {
					width: auto;
					height: auto;
				}
			}
			
			[data-icon-size="fixed"] {
				--icon-size: var(--base-font-size);
				
				[data-os="android"] & {
					--icon-size: calc(var(--base-font-size) * 1.2);
				}
				
				& svg, 
				& img {
					width: var(--icon-size);
					height: var(--icon-size);
					min-width: var(--icon-size);
					min-height: var(--icon-size);
				}
			}


	/* BADGES */
		.containerBadge {
			background: var(--accent);
			border-radius: calc(var(--base-radius-size) * 20);
			font-family: var(--font-rounded);
			font-weight: bold;
			font-size: calc(var(--base-font-size) * 0.8);
			height: calc(var(--base-font-size) * 1.5);
			padding-inline: calc(var(--base-font-size) / 1.3);
			display: inline-block;
			text-transform: uppercase;
			color: white;
			
			&.mini {
				font-size: calc(var(--base-font-size) * 0.5);
				height: calc(var(--base-font-size) * 1);
				display: inline-flex;
				justify-content: center;
				align-items: center;
				padding-inline: calc(var(--base-font-size) / 2);
			}
			
			&[data-type="destructive"] {
				background: var(--destructive);
				color: white;
			}
			
			&[data-type="warning"] {
				background: var(--warning);
				color: black;
			}
			
			&[data-type="positive"] {
				background: var(--positive);
				color: white;
				
				@media (prefers-color-scheme: dark) {
					color: black;
					
					[data-theme="light"] & {
						color: white;
					}
				}
				
				[data-theme="dark"] & {
					color: black;
				}
			}
			
			&[data-type="info"] {
				background: var(--info);
				color: white;
			}
			
			&[data-type="grey"] {
				background: oklch(from var(--main) l c h / .1);
				color: oklch(from var(--main) l c h / .5);
			}
			
			&[data-type="sidebar"] {
				width: calc(var(--base-font-size) * 3);
				padding-inline: 0px;
				display: inline-flex;
				justify-content: center;
				align-items: center;
				color: oklch(from var(--main) l c h / .5);
				background: oklch(from var(--main) l c h / .1);
				
				[data-contrast="more"] & {
					background: var(--main);
					color: var(--background);
				}
			}
			
			.picked &[data-type="sidebar"], 
			.itemList.picked & {
				background: white;
				color: var(--accent);
			}
			
			[data-contrast="more"] &:not([data-type="grey"], [data-type="sidebar"]) {
				color: light-dark(white, black);
			}
			
			[data-contrast="more"] &[data-type="grey"] {
				color: light-dark(black, white);
			}
		}
	
	
	/* SEGMENTED CONTROLS */
		.controlSegmented {
			background: oklch(from var(--main) l c h / .1);
			width: 100%;
			padding: calc(var(--base-gap-size) / 8);
			border-radius: calc(var(--base-radius-size) / 1.5);
			display: grid;
			grid-template-columns: repeat(auto-fit,minmax(1px,1fr));
			
			[data-contrast="more"] &:not(.split) {
				background: none;
				border: 1px solid var(--divider);
			}
			
			[data-os="android"] &:not(.display) {
				background: none;
			}
			
			[data-os="windows"] &:not(.display, .split) {
				background: oklch(from var(--main) l c h / .05);
				border: 1px solid oklch(from var(--main) l c h / .05);
			}
			
			&.split {
				background: none;
				padding: 0px;
				border-radius: 0px;
			}
			
			&.display {
				background: oklch(0 0 0 / .4);
				padding: calc(var(--base-gap-size) / 4);
				border-radius: 100px;
				-webkit-backdrop-filter: var(--material-translucent-large);
				backdrop-filter: var(--material-translucent-large);
				
				[data-os="android"] & {
					background: oklch(from var(--accent) l c h / .1);
					padding: 0px;
				}
				
				[data-contrast="more"] & {
					background: black;
				}
			}
		}

	
	/* CONTEXT MENUS */
		.containerContextButton {
			width: auto;
			position: relative;
			display: inline-block;
			
			[data-os="android"] &:has(> .active) .gripper {
				rotate: 180deg;
			}
		}
		
		.contextContainerMenu {
			display: flex;
			flex-direction: column;
			position: absolute;
			top: calc(100% + 2px);
			min-width: calc(var(--base-font-size) * 9.375);
			overflow: auto;
			border-radius: var(--base-radius-size);
			box-shadow: var(--shadow-wide), 
						0px 0px 0px 1px oklch(from var(--main) l c h / .1);
			max-height: 0px;
			transition: var(--base-time-length) max-height cubic-bezier(.61,-0.5,.55,1), 
						var(--base-time-length) scale cubic-bezier(.61,-0.5,.55,1);
			z-index: 20;
			scale: 0;
			/* width: auto !important; */
			background: oklch(from var(--systempanel) l c h / .8);
			-webkit-backdrop-filter: var(--material-translucent-large);
			backdrop-filter: var(--material-translucent-large);
			
			[data-os="android"] & {
				border-radius: calc(var(--base-radius-size)  / 4);
				box-shadow: var(--shadow-tight);
				background: var(--systempanel);
			}
			
			& .group {
				display: flex;
				flex-direction: column;
			}
			
			[data-theme="dark"] & {
				box-shadow: var(--shadow-wide), 
							0px 0px 0px 1px black,
							inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1);
			}
			
			@media (prefers-color-scheme: dark) {
				box-shadow: var(--shadow-wide), 
							0px 0px 0px 1px black, 
							inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1);
			}
			
			[data-theme="light"] & {
				box-shadow: var(--shadow-wide), 
							0px 0px 0px 1px oklch(from var(--main) l c h / .1);
			}
			
			[data-type="popover"] & {
				border-radius: calc(var(--base-radius-size) * 1.5);
				
				[data-os="android"] & {
					border-radius: var(--base-radius-size);
				}
			}
			
			[data-contrast="more"] & {
				background: var(--systempanel);
				box-shadow: 0px 0px 0px 1px var(--divider), 
							var(--shadow-wide);
							
				@media (pointer: fine) {
					box-shadow: var(--shadow-wide), 
								0px 0px 0px 1px var(--main);
				}
			}
			
			[data-os="macos"] &, 
			[data-os="windows"] & {
				padding: calc(var(--base-gap-size) / 4);
			}
			
			[data-os="android"] & {
				padding-block: calc(var(--base-gap-size) / 2);
			}
			
			&.active {
				max-height: 600px;
				top: calc(100% + 2px);
				transition: var(--base-time-length) max-height cubic-bezier(.18,.81,.53,1.27), 
							var(--base-time-length) scale cubic-bezier(.18,.81,.53,1.27);
				scale: 1;
			}
			
			[data-position="left"] & {
				left: 0px;
				transform-origin: top left;
			}
			
			[data-position="center"] & {
				transform-origin: top center;
			}
			
			[data-position="right"] & {
				right: 0px;
				transform-origin: top right;
			}
			
			& .divider {
				width: 100%;
				
				[data-os="ios"] & {
					height: 6px;
					background: oklch(from var(--main) l c h / .1);
				}
				
				[data-os="macos"] & {
					height: 1px;
					margin-block: 8px;
					
					&::after {
						content: '';
						background: oklch(from var(--main) l c h / .1);
						width: calc(100% - 24px);
						height: 1px;
						position: absolute;
						left: 12px;
					}
				}
				
				[data-os="android"] & {
					height: 1px;
					background: oklch(from var(--main) l c h / .1);
					margin-block: calc(var(--base-gap-size) / 2);
				}
				
				[data-os="windows"] & {
					height: 1px;
					background: oklch(from var(--main) l c h / .1);
					margin-block: 4px;
				}
			}
		}
		
		button.excludePadding + .contextContainerMenu {
			top: 130%;
		}
		
		[data-position="center"] {
			display: inline-flex;
			justify-content: center;
		}
		
		.colorChip {
			width: var(--base-font-size);
			height: var(--base-font-size);
			border-radius: calc(var(--base-radius-size) * 20);
			background: var(--accent);
		}

	
	/* FORMS */
		form {
			display: inline-flex;
			flex-direction: column;
			margin-block-end: var(--base-gap-size);
			width: 100%;
		}
		
		.containerInput {
			margin-bottom: calc(var(--base-gap-size) / 4);
		}
		
		label {
			position: relative;
			display: inline-flex;
			padding: 0px;
			font-size: var(--base-font-size);
			margin: 0px;
			
			&:hover  {
				cursor: pointer;
			}
		}
		
		/* label:has([type="radio"][checked]) {
			pointer-events: none;
		} */
		
		.inputLabel {
			color: var(--main);
		}
		
		/* label:hover .inputLabel {
			color: oklch(from var(--main) l c h / .5);
		} */
	
	
	/* RADIO BUTTONS */
		input[type="radio"] {
			display: none;
			
			& + .fakeRadio {
				display: inline-block;
				width: calc(var(--base-font-size) * 1.5);
				height: calc(var(--base-font-size) * 1.5);
				position: relative;
				border-radius: calc(var(--base-radius-size) * 5);
				top: 0px;
				margin-inline-end: calc(var(--base-gap-size) / 2);
				background: var(--systempanel);
				box-shadow: var(--input-border);
				
				[data-os="android"] & {
					background: none;
				}
				
				[data-os="windows"] & {
					background: oklch(from var(--main) l c h / .05);
				}
				
				label:hover & {
					opacity: 0.5;
				}
			}
			
			&:checked + .fakeRadio {
				background: white;
				border: calc(var(--base-font-size) / 3) solid var(--accent);
				box-shadow: none;
				
				[data-os="android"] & {
					border: none;
					box-shadow: inset 0px 0px 0px 2px var(--accent), 
								inset 0px 0px 0px 6px oklch(from var(--accent) l c h / .2), 
								inset 0px 0px 0px 6px var(--foreground), 
								inset 0px 0px 0px 20px var(--accent);
				}
			}
		}
	
	
	/* CHECKBOXES */
		label:has(> .disabled) {
			pointer-events: none;
		}
	
		input[type="checkbox"] {
			display: none;
			
			&.disabled + .fakeCheckbox {
				opacity: 0.5;
			}
			
			&:not([switch]) {
				& + .fakeCheckbox {
					display: inline-block;
					width: calc(var(--base-font-size) * 1.5);
					height: calc(var(--base-font-size) * 1.5);
					position: relative;
					border-radius: calc(var(--base-font-size) * 0.4);
					top: 0px;
					margin-inline-end: calc(var(--base-gap-size) / 2);
					background: var(--systempanel);
					box-shadow: var(--input-border);
					
					[data-os="android"] & {
						background: none;
					}
					
					[data-os="windows"] & {
						background: oklch(from var(--main) l c h / .05);
					}
					
					label:hover & {
						opacity: 0.5;
					}
				}
				
				&:checked + .fakeCheckbox {
					background-color: var(--accent);
					border: none;
					background-image: url(images/tick-dark.svg);
					background-repeat: no-repeat;
					background-position: center;
					background-size: var(--base-font-size);
					box-shadow: none;
				}
				
				
			}
			
			&[switch] {
				& + .fakeCheckbox {
					height: calc((var(--base-font-size) * 1.5) + calc(var(--base-font-size) / 4));
					max-height: calc((var(--base-font-size) * 1.5) + calc(var(--base-font-size) / 4));
					width: calc(var(--base-font-size) * 3);
					min-width: calc(var(--base-font-size) * 3) !important;
					border-radius: calc(var(--base-radius-size) * 20);
					padding: 0px;
					position: relative;
					transition: var(--base-time-length) background ease;
					display: inline-block;
					white-space: nowrap;
					border: none;
					--switch-background: pink;
					
					[data-os="android"] & {
						height: calc((var(--base-font-size) * 1.8) + calc(var(--base-font-size) / 4));
						max-height: calc((var(--base-font-size) * 1.8) + calc(var(--base-font-size) / 4));
						width: calc(var(--base-font-size) * 3.5);
						min-width: calc(var(--base-font-size) * 3.5) !important;
					}
					
					:checked + & {
						transition: var(--base-time-length) background ease;
						
						[data-os="ios"] & {
							--switch-background: var(--positive);
							background: var(--switch-background);
							
							[data-contrast="more"] &::before {
								box-shadow: 0px 0px 0px 1px light-dark(transparent, oklch(0 0 0 / .2));
							}
						}
						
						[data-os="macos"] & {
							--switch-background: var(--accent);
						}
						
						[data-os="macos"] &::after {
							content: '';
							width: 100%;
							height: 100%;
							position: absolute;
							top: 0px;
							left: 0px;
							border-radius: calc(var(--base-radius-size) * 20);
							box-shadow: inset 0px 1px 2px oklch(0 0 0 / .1), 
										inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1) !important;
							background: linear-gradient(
								180deg, 
								lch(from var(--switch-background) calc(l - 10) c h), 
								lch(from var(--switch-background) calc(l + 5) c h)
							);
							transition: var(--base-time-length) opacity ease;
						}
						
						[data-os="android"] &, 
						[data-os="windows"] & {
							--switch-background: var(--accent);
							background: var(--switch-background);
						}
						
						[data-os="android"] & {
							border: 2px solid transparent;
						}
						
						[data-os="ios"] &::before {
							left: calc(var(--base-font-size) * 1.25);
						}
						
						[data-os="macos"] &::before {
							left: calc(var(--base-font-size) * 1.05);
						}
						
						[data-os="android"] &::before {
							left: calc(var(--base-font-size) * 1.5);
						}
						
						[data-os="windows"] &::before {
							left: calc(var(--base-font-size) * 1.05);
							background: var(--background);
						}
					}
					
					:not(:checked) + & {
						background: oklch(from var(--main) l c h / .1);
						transition: var(--base-time-length) background ease;
						
						[data-os="ios"] & {
							[data-contrast="more"] &::before {
								box-shadow: 0px 0px 0px 1px light-dark(transparent, oklch(0 0 0 / .2));
							}
						}
						
						[data-os="macos"] & {
							--switch-background: var(--accent);
							box-shadow: inset 0px 1px 2px oklch(0 0 0 / .1), 
										inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1) !important;
						}
						
						[data-os="macos"] &::after {
							content: '';
							width: 100%;
							height: 100%;
							position: absolute;
							top: 0px;
							left: 0px;
							border-radius: calc(var(--base-radius-size) * 20);
							background: linear-gradient(
								180deg, 
								lch(from var(--switch-background) calc(l - 10) c h), 
								lch(from var(--switch-background) calc(l + 5) c h)
							);
							opacity: 0;
							transition: var(--base-time-length) opacity ease;
						}
						
						[data-os="android"] & {
							background: oklch(from var(--main) l c h / .1);
							border: 2px solid oklch(from var(--main) l c h / .4);
						}
						
						[data-os="windows"] & {
							box-shadow: inset 0px 0px 0px 1px oklch(from var(--main) l c h / .2);
							background: oklch(from var(--main) l c h / .05);
						}
						
						[data-contrast="more"] & {
							background: oklch(from var(--main) l c h / .4);
							transition: var(--base-time-length) background ease;
						}
						
						&:hover {
							background: oklch(from var(--main) l c h / .15);
						}
						
						&::before {
							left: 0px;
							transition: var(--base-time-length) left ease;
						}
						
						[data-os="android"] &::before {
							background: oklch(from var(--main) l c h / .6);
							/* top: calc(var(--base-font-size) / 6); */
						}
						
						[data-os="windows"] &::before {
							background: oklch(from var(--main) l c h / .5);
						}
					}
					
					&::before {
						content: '';
						height: calc(100% - (var(--base-font-size) / 3));
						margin: calc(var(--base-font-size) / 6);
						aspect-ratio: 1;
						background: white;
						border-radius: calc(var(--base-radius-size) * 20);
						position: absolute;
						top: 0px;
						transition: var(--base-time-length) left ease;
						z-index: 2;
					}
					
					[data-os="macos"] &::before {
						box-shadow: 0px 1px 2px oklch(0 0 0 / .1);
					}
					
					[data-os="android"] &::before {
						height: calc((var(--base-font-size) * 1) + calc(var(--base-font-size) / 4));
						top: calc(var(--base-font-size) / 9);
						left: calc(var(--base-font-size) / 4);
					}
					
					
					
					/* [data-os="android"] &.off::before {
						background: oklch(from var(--main) l c h / .6);
						top: calc(var(--base-font-size) / 4.5);
						left: calc(var(--base-font-size) / 4);
						height: calc((var(--base-font-size) * 1) + calc(var(--base-font-size) / 8));
					} */
					
					/* [data-os="windows"] &::before {
						background: var(--foreground);
					}
					
					[data-os="windows"] &.off::before {
						background: oklch(from var(--main) l c h / .5);
					} */
					
					[data-os="macos"] &, 
					[data-os="windows"] & {
						width: calc(var(--base-font-size) * 2.3);
						min-width: calc(var(--base-font-size) * 2.3) !important;
						height: calc((var(--base-font-size) * 1) + calc(var(--base-font-size) / 4));
						
						&.on::before {
							left: calc(var(--base-font-size) * 1.05);
							margin: calc(var(--base-font-size) / 8);
							height: calc(100% - (var(--base-font-size) / 4));
						}
					}
				}
				
				
				
			}
		}
	
	
	/* TEXTFIELDS */
		input[type="text"], 
		input[type="number"], 
		textarea {
			width: 100% !important;
			border-radius: calc(var(--base-radius-size) / 2);
			font-size: clamp(16px, var(--base-font-size), var(--base-font-size));
			color: var(--main);
			padding: calc(var(--base-gap-size) / 2);
			margin-block-end: var(--base-gap-size);
			margin-block-start: calc(var(--base-gap-size) / 4);
			border: none;
			background: var(--systempanel);
			box-shadow: var(--input-border);
			-webkit-appearance: none;
			
			&::placeholder {
				color: oklch(from var(--main) l c h / .4);
			}
			
			&:hover {
				box-shadow: var(--input-border-hover);
			}
			
			&:focus {
				box-shadow: inset 0px 2px 3px oklch(0 0 0 / .1), 
							inset 0px 0px 0px 1px var(--accent);
			}
			
			[data-os="android"] & {
				border-radius: calc(var(--base-radius-size) / 4);
				background: none;
				
				&:hover {
					box-shadow: 0px 0px 0px 1px oklch(from var(--main) l c h / .8);
				}
			}
			
			[data-os="windows"] & {
				background: rvar(--systempanel);
				box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
							inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1), 
							inset 0px -2px 0px 0px oklch(from var(--main) l c h / .6);
				border-radius: calc(var(--base-radius-size) / 2);
				
				&:hover, 
				&:focus {
					background: var(--systempanel);
					box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
								inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1), 
								inset 0px -2px 0px 0px var(--accent);
				}
			}
			
			[data-contrast="more"][data-os="windows"] & {
				box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
							inset 0px 0px 0px 1px var(--divider), 
							inset 0px -2px 0px 0px oklch(from var(--divider) l c h / .6);
							
				&:hover, 
				&:focus {
					background: rvar(--systempanel);
					box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
								inset 0px 0px 0px 1px var(--divider),
								inset 0px -4px 0px 0px var(--accent);
				}
			}
		}
	
	
	/* SEARCH FIELDS */
		.containerSearch {
			width: 100%;
			position: relative;
			
			& .buttonClearSearch {
				position: absolute;
				top: 0px;
				right: 0px;
				height: 100%;
				width: calc(var(--base-font-size)  * 2);
				align-items: center;
				display: none;
				z-index: 3;
				justify-content: center;
				align-items: center;
				
				[data-os="android"] & {
					right: 10px;
				}
				
				& svg {
					width: calc(var(--base-font-size) * 1);
					height: calc(var(--base-font-size) * 1);
				}
				
				& path {
					fill: var(--main);
				}
				
				&.active {
					display: flex;
				}
				
				&:hover {
					opacity: 0.5;
					cursor: pointer;
				}
				
				[data-os="windows"] &.active + .iconSearch {
					opacity: 0;
				}
			}
			
			& .iconSearch {
				position: absolute;
				top: 0px;
				height: 100%;
				width: calc(var(--base-font-size)  * 2);
				align-items: center;
				z-index: 2;
				display: flex;
				justify-content: center;
				align-items: center;
				opacity: 0.5;
				
				[data-os="default"] &, 
				[data-os="ios"] &, 
				[data-os="macos"] & {
					left: 0px;
				}
				
				[data-os="android"] & {
					left: 10px;
				}
				
				[data-os="windows"] & {
					right: 0px !important;
				}
				
				& svg {
					width: calc(var(--base-font-size) * 1);
					height: calc(var(--base-font-size) * 1);
				}
				
				& path {
					fill: var(--main);
				}
			}
		}
		
		input[type="search"] {
			width: 100% !important;
			border-radius: calc(var(--base-radius-size) / 2);
			background: oklch(from var(--main) l c h / .05);
			border: none;
			font-size: clamp(16px, var(--base-font-size), var(--base-font-size));
			color: var(--main);
			padding: calc(var(--base-gap-size) / 2);
			padding-inline-end: calc(var(--base-gap-size) * 2);
			margin-block-end: var(--base-gap-size);
			margin-block-start: calc(var(--base-gap-size) / 4);
			
			&::placeholder {
				color: oklch(from var(--main) l c h / .4);
			}
			
			[data-os="ios"] & {
				padding-inline-start: calc(var(--base-gap-size) * 1.5);
			}
			
			[data-os="macos"] & {
				padding-inline-start: calc(var(--base-gap-size) * 1.5);
				background: none;
				border: 1px solid var(--divider);
			}
			
			[data-os="android"] & {
				background: oklch(from var(--accent) l c h / .1);
				border-radius: calc(var(--base-radius-size) * 5);
				padding-inline-start: calc(var(--base-gap-size) * 2);
			}
			
			[data-os="windows"] & {
				background: var(--systempanel);
				box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
							inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1),
							inset 0px -1px 0px 0px oklch(from var(--main) l c h / .6);
				border-radius: calc(var(--base-radius-size) / 2);
			}
			
			[data-contrast="more"][data-os="windows"] & {
				box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
							inset 0px 0px 0px 1px var(--divider),
							inset 0px -2px 0px 0px oklch(from var(--divider) l c h / .6);
				border: none;
			}
			
			[data-contrast="more"] & {
				border: 1px solid var(--divider);
			}
			
			&:focus, 
			&:hover {
				background: oklch(from var(--main) l c h / .1);
				
				[data-os="macos"] & {
					background: oklch(from var(--main) l c h / .02);
				}
				
				[data-os="android"] & {
					background: oklch(from var(--accent) l c h / .3);
				}
			}
			
			[data-os="windows"] &:hover {
				background: oklch(from var(--main) l c h / .01);
			}
			
			[data-os="windows"] &:focus {
				background: var(--systempanel);
				box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
							inset 0px 0px 0px 1px oklch(from var(--main) l c h / .1), 
							inset 0px -2px 0px 0px var(--accent);
			}
			
			[data-contrast="more"][data-os="windows"] &:focus, 
			[data-contrast="more"][data-os="windows"] &:hover {
				box-shadow: 0px 2px 3px oklch(0 0 0 / .05), 
							inset 0px 0px 0px 1px var(--main), 
							inset 0px -4px 0px 0px var(--accent);
			}
			
			&::-webkit-search-decoration,
			&::-webkit-search-cancel-button,
			&::-webkit-search-results-button,
			&::-webkit-search-results-decoration {
				-webkit-appearance:none;
			}
		}
	
	
	/* TOKENS */
		.containerTokens {
			display: grid;
			grid-template-columns: repeat(auto-fill,minmax(120px,1fr));
			gap: calc(var(--base-gap-size) / 2);
		}
	
	
	/* ACCENT CHIPS */
		[data-setting="accent"] .contextContainerMenu {
			min-width: 260px;
			--foreground: var(--systempanel);
		}
		
		.containerAccents {
			display: grid;
			gap: calc(var(--base-gap-size) / 2);
			grid-template-columns: repeat(auto-fill,minmax(40px, 1fr));
			
			@media (pointer: fine) {
				grid-template-columns: repeat(auto-fill,minmax(25px, 1fr));
			}
		}
		
		.accentChip {
			width: 100%;
			aspect-ratio: 1 / 1;
			background: var(--accent);
			border-radius: calc(var(--base-radius-size) * 20);
			box-shadow: inset 0px 0px 0px 1px oklch(from var(--main) l c h/ .1);
			background-size: cover !important;
			
			&:hover {
				cursor: pointer;
				opacity: 0.5;
			}
		}

	
	/* VARIABLES */
		.containerVariables {
			display: flex;
			flex-direction: row;
			gap: calc(var(--base-gap-size) / 4);
			width: 100%;
			overflow: auto;
		}
		
		.variable {
			color: var(--accent);
			background: oklch(from var(--accent) l c h / .1);
			border-radius: calc(var(--base-radius-size) * 20);
			display: inline-block;
			padding: calc(var(--base-gap-size) / 3) var(--base-gap-size);
			font-family: var(--font-regular);
			font-size: calc(var(--base-font-size) * 0.75);
			text-align: center;
			white-space: nowrap;
		}
	
	
	/* SELECTION RINGS */
		.selectionRing.picked, 
		.picked .selectionRing {
			box-shadow: inset 0px 0px 0px 3px var(--accent), 
						inset 0px 0px 0px 6px var(--foreground), 
						inset 0px 0px 0px 7px oklch(from var(--main) l c h / .1) !important;
			pointer-events: none;
			
			@media (pointer: fine) {
				box-shadow: inset 0px 0px 0px 2px rvar(--accent), 
							inset 0px 0px 0px 4px var(--foreground), 
							inset 0px 0px 0px 2px oklch(from var(--main) l c h / .1) !important;
				pointer-events: none;
			}
		}
	
	
	/* PROGRESS BARS */
		progress {
			background: oklch(from var(--main) l c h / .05);
			border-radius: calc(var(--base-radius-size) * 20);
			overflow: hidden;
			border: none;
			width: 100%;
			height: calc(var(--base-font-size) * 0.8);
			
			[data-os="android"] & {
				background: oklch(from var(--accent) l c h / .2);
			}
			
			[data-contrast="more"] & {
				box-shadow: inset 0px 0px 0px 1px var(--divider);
			}
			
			&::-webkit-progress-bar {
				background: oklch(from var(--main) l c h / .05);
			}
			
			&::-webkit-progress-value {
				background: var(--accent);
				border-radius: calc(var(--base-radius-size) * 20);
			}
			
			&::-moz-progress-bar {
				background: var(--accent);
				border: none;
			}
		}
	
	
	/* TABLES */
		table {
			width: 100%;
			border-spacing: 0px;
			
			&.withBorder {
				border: 1px solid var(--divider);
				border-block-end: none;
				
				& td:first-child,
				& th:first-child {
					padding-inline-start: calc(var(--base-gap-size) / 2);
				}
				
				& td:last-child,
				& th:last-child {
					padding-inline-end: calc(var(--base-gap-size) / 2);
				}
			}
			
			& thead {
				border: none;
				
				& tr {
					border-block-end: 2px solid var(--divider);
				}
			}
			
			& tr {
				border-block-end: 1px solid var(--divider);
				color: var(--main);
				font-family: var(--font-regular);
				font-size: var(--base-font-size);
				display: grid;
			}
			
			&.data {
				& th {
					font-size: calc(var(--base-font-size) * 0.75);
					text-transform: uppercase;
				}
				
				& thead {
					background: var(--foreground);
					position: relative;
					
					[data-os="android"] &, 
					[data-os="windows"] & {
						background: var(--background);
					}
				}
				
				& td,
				& th {
					border-inline-end: 1px solid var(--divider);
					padding-inline: calc(var(--base-gap-size) / 2);
					
					&:last-child {
						border-inline-end: none;
					}
				}
			}
			
			[data-os="android"] & th {
				font-family: var(--font-regular-bold);
				font-weight: normal;
			}
			
			[data-os="windows"] & th {
				font-family: var(--font-regular-bold);
				font-weight: 600;
			}
			
			& td, 
			& th {
				display: flex;
				flex-direction: column;
				align-items: flex-start;
				padding-block: calc(var(--base-gap-size) / 2);
				padding-inline-end: calc(var(--base-gap-size) / 2);
				gap: calc(var(--base-gap-size) / 3);
			}
			
			& th {
				& span {
					display: none;
					width: var(--base-font-size);
					height: var(--base-font-size);
					
					& svg {
						width: var(--base-font-size);
						height: var(--base-font-size);
					}
					
					& path {
						fill: var(--main);
					}
				}
				
				& div {
					display: flex;
					justify-content: space-between;
					width: 100%;
				}
			}
			
			&.tablesorter th:hover {
				cursor: pointer;
				background: var(--divider);
			}
			
			& th.tablesorter-headerDesc span {
				display: block;
			}
			
			& th.tablesorter-headerAsc span {
				display: block;
				transform: rotate(180deg)
			}
		}
	
	
/* MODALS */
	/* ANIMATIONS */
		/* BACKDROP */
			@keyframes backingSummon {
				0% {
					opacity: 0;
				}
				100% {
					opacity: 1;
				}
			}
			
			
			@keyframes backingDismiss {
				0% {
					opacity: 1;
				}
				100% {
					opacity: 0;
				}
			}
		
		
		/* FULL SHEET */
			@keyframes containerSheet {
				0% {
					transform: translateY(100%);
				}
				100% {
					transform: translateY(0%);
				}
			}
			
			
			@keyframes containerSheetInactive {
				0% {
					transform: translateY(0px);
				}
				100% {
					transform: translateY(100%);
				}
			}
		
		
		/* HALF SHEET */
			@keyframes containerSheetHalf {
				0% {
					transform: translateY(100%);
				}
				100% {
					transform: translateY(0px);
				}
			}
			
			
			@keyframes containerSheetHalfInactive {
				0% {
					transform: translateY(0px);
				}
				100% {
					transform: translateY(100%);
				}
			}
		
		
		/* ALERTS */
			@keyframes containerAlert {
				0% {
					transform: scale(0);
					opacity: 0;
				}
				100% {
					transform: scale(1);
					opacity: 1;
				}
			}
			
			
			@keyframes containerAlertInactive {
				0% {
					transform: scale(1);
					opacity: 1;
				}
				100% {
					transform: scale(0);
					opacity: 0;
				}
			}
		
		
		/* TOASTS */
			@keyframes containerToast {
				0% {
					transform: translateY(-5vh);
				}
				100% {
					transform: translateY(0px);
				}
			}
			
			
			@keyframes containerToastInactive {
				0% {
					transform: translateY(0px);
					opacity: 1;
				}
				100% {
					transform: translateY(-10vh);
					opacity: 0;
				}
			}
		
		
		/* LIGHTBOXES */
			@keyframes containerLightbox {
				from {
					opacity: 0;
					scale: 0.95;
				}
				to {
					opacity: 1;
					scale: 1;
				}
			}
			
			
			@keyframes containerLightboxInactive {
				from {
					opacity: 1;
					scale: 1;
				}
				to {
					opacity: 0;
					scale: 0.95;
				}
			}
		
		
		@media (width >= 640px) {
			/* FULL SHEET */
				@keyframes containerSheet {
					0% {
						transform: translateY(100px);
						opacity: 0;
					}
					100% {
						transform: translateY(0px);
						opacity: 1;
					}
				}
				
				
				@keyframes containerSheetInactive {
					0% {
						transform: translateY(0px);
						opacity: 1;
					}
					100% {
						transform: translateY(100px);
						opacity: 0;
					}
				}
			
			
			/* HALF SHEET */
				@keyframes containerSheetHalf {
					0% {
						transform: translateX(100%);
					}
					100% {
						transform: translateX(0px);
					}
				}
				
				
				@keyframes containerSheetHalfInactive {
					0% {
						transform: translateX(0px);
					}
					100% {
						transform: translateX(100%);
					}
				}
		}
	
	
	/* DIALOG */
		dialog {
			&[open]::backdrop {
				width: 100%;
				height: 100%;
				opacity: 1;
				/* position: absolute; */ /* Removed because of Android overflow issues */
				top: 0px;
				left: 0px;
				/* animation: backingSummon calc(var(--base-time-length) * 1.5) 1; */
				animation: backingSummon 0.45s 1;
				display: flex;
				justify-content: center;
				align-items: center;
				padding-block-start: env(safe-area-inset-top);
				padding-block-end: max(var(--base-gap-size), env(safe-area-inset-bottom));
				padding-inline-start: max(var(--base-gap-size), env(safe-area-inset-left));
				padding-inline-end: max(var(--base-gap-size), env(safe-area-inset-right));
				-webkit-backdrop-filter: saturate(0);
				backdrop-filter: saturate(0);
			}
			
			&[open][data-type="toast"]::backdrop {
				-webkit-backdrop-filter: saturate(1);
				backdrop-filter: saturate(1);
			}
			
			&[open].hide::backdrop {
				/* animation: backingDismiss var(--base-time-length) 1; */
				animation: backingDismiss 0.3s 1;
			}
			
			&[open][data-backing="dark"]::backdrop {
				background: oklch(0 0 0 / .7);
			}
			
			&[open][data-backing="light"]::backdrop {
				background: oklch(100% 0 0 / .7);
			}
			
			&[open][data-backing="blurdark"]::backdrop {
				background: oklch(0 0 0 / .7);
				backdrop-filter: blur(20px);
				-webkit-backdrop-filter: blur(20px);
			}
			
			&[open][data-backing="blurlight"]::backdrop {
				background: oklch(100% 0 0 / .7);
				backdrop-filter: blur(20px);
				-webkit-backdrop-filter: blur(20px);
			}
			
			&[open][data-backing="gradient"]::backdrop {
				background: linear-gradient(oklch(0 0 0 / .2), oklch(0 0 0 / 0));
			}
			
			[data-contrast="more"] &[open][data-backing="gradient"]::backdrop {
				background: linear-gradient(oklch(0 0 0 / 0.5), oklch(0 0 0 / 0));
			}
			
			[data-contrast="more"] & {
				border: 1px solid var(--divider) !important;
			}
			
			& .scrollview {
				padding: var(--base-gap-size);
				padding-block-end: max(var(--base-gap-size), env(safe-area-inset-bottom));
			}
			
			& .containerToolbar {
				height: var(--toolbar-height);
				padding: 0px calc(var(--base-gap-size) / 2);
			}
			
			& * > :last-child {
				margin-block-end: 0px !important;
			}
		}
		
		@media (width >= 640px) {
			body:not([data-os="android"]) dialog[data-type="fullsheet"]::before, 
			body:not([data-os="android"]) dialog[data-type="halfsheet"]::before, 
			body:not([data-os="android"]) dialog[data-type="smallsheet"]::before {
				content: '';
				width: 100%;
				height: 100%;
				position: absolute;
				left: 0px;
				top: 0px;
				box-shadow: inset 0px 0px 0px 1px oklch(100% 0 0 / .1);
				z-index: 20000000;
				border-radius: var(--base-radius-size);
				pointer-events: none;
			}
		}
	
	
	/* FULL SHEET */
		dialog[data-type="fullsheet"] {
			min-width: 100vw;
			max-width: 600px;
			min-height: calc(100vh - 20px - env(safe-area-inset-top));
			background: var(--background);
			padding: 0px;
			border-radius: var(--base-radius-size) var(--base-radius-size) 0px 0px;
			animation: containerSheet calc(var(--base-time-length) * 1.5) 1;
			margin: 0px;
			margin-block-start: calc(20px + env(safe-area-inset-top));
			border: none;
			box-shadow: var(--shadow-wide);
			overflow: hidden;
			position: revert;
			
			[data-os="macos"] & {
				background: var(--foreground);
			}
			
			[data-os="windows"] & {
				background: var(--systempanel);
			}
			
			&.hide {
				animation: containerSheetInactive calc(var(--base-time-length) * 1.5) 1;
			}
			
			@media (width >= 640px) {
				min-width: auto;
				width: 800px;
				min-height: 80vh;
				border-radius: var(--base-radius-size);
				margin: auto;
			}
			
			@media (width >= 640px) and (height <= 500px) {
				min-height: calc(100vh - max(var(--base-gap-size), env(safe-area-inset-top)) - max(var(--base-gap-size), env(safe-area-inset-bottom)));
			}
			
			@media (width >= 800px) and (height <= 800px) {
				min-height: 80vh;
				max-width: 70vw;
			}
			
			@media (width >= 800px) and (height <= 1000px) {
				min-height: 60vh;
				max-width: 80vw;
			}
			
			@media (width >= 1300px) {
				max-width: 800px;
				min-height: 70vh;
			}
		}

	
	/* HALF SHEET */
		dialog[data-type="halfsheet"] {
			min-width: 100%;
			max-width: 600px;
			min-height: 60vh;
			max-height: 60vh;
			background: var(--background);
			padding: 0px;
			border-radius: var(--base-radius-size) var(--base-radius-size) 0px 0px;
			animation: containerSheetHalf calc(var(--base-time-length) * 1.5) 1;
			margin: 0px;
			margin-block-start: 40vh;
			border: none;
			box-shadow: var(--shadow-wide);
			overflow: hidden;
			bottom: 0px;
			
			[data-os="macos"] & {
				background: var(--foreground);
			}
			
			[data-os="windows"] & {
				background: var(--systempanel);
			}
			
			&.hide {
				animation: containerSheetHalfInactive calc(var(--base-time-length) * 1.5) 1;
			}
			
			@media (width >= 640px) {	
				border-radius: var(--base-radius-size) !important;
				max-height: calc(100% - (var(--base-gap-size) * 2));
				min-height: calc(100% - (var(--base-gap-size) * 2));
				min-width: calc(var(--aside-width) * 1.5);
				max-width: calc(var(--aside-width) * 1.5);
				margin-block: var(--base-gap-size);
				margin-inline-start: calc(100% - var(--base-gap-size) - (var(--aside-width) * 1.5));
				margin-inline-end: var(--base-gap-size);
			}
		}


	/* SMALL SHEET */
		dialog[data-type="smallsheet"] {
			min-width: 100%;
			max-width: 600px;
			min-height: calc(100% - 20px - env(safe-area-inset-top));
			background: var(--background);
			padding: 0px;
			border-radius: var(--base-radius-size) var(--base-radius-size) 0px 0px;
			animation: containerSheet calc(var(--base-time-length) * 1.5) 1;
			margin: 0px;
			margin-block-start: calc(20px + env(safe-area-inset-top));
			border: none;
			box-shadow: var(--shadow-wide);
			overflow: hidden;
			
			[data-os="macos"] & {
				background: var(--foreground);
			}
			
			[data-os="windows"] & {
				background: var(--systempanel);
			}
			
			&.hide {
				animation: containerSheetInactive calc(var(--base-time-length) * 1.5) 1;
			}
			
			@media (width >= 640px) {
				min-width: auto;
				width: 800px;
				max-width: min(100%, var(--base-font-size) * 31.25);
				min-height: 600px;
				max-height: 600px;
				border-radius: var(--base-radius-size);
				margin: auto;
			}
			
			@media (width >= 640px) and (height <= 600px) {
				min-height: calc(100vh - max(var(--base-gap-size), env(safe-area-inset-top)) - max(var(--base-gap-size), env(safe-area-inset-bottom)));
				max-height: calc(100vh - max(var(--base-gap-size), env(safe-area-inset-top)) - max(var(--base-gap-size), env(safe-area-inset-bottom)));
			}
		}

	
	/* ALERTS */
		dialog[data-type="alert"] {
			min-width: calc(var(--base-font-size) * 18.75);
			max-width: calc(var(--base-font-size) * 18.75);
			background: oklch(from var(--systempanel) l c h / .8);
			-webkit-backdrop-filter: var(--material-translucent-large);
			backdrop-filter: var(--material-translucent-large);
			border-radius: var(--base-radius-size);
			animation: containerAlert calc(var(--base-time-length) * 1) cubic-bezier(.46,.72,.55,1.37) 1;
			border: none;
			box-shadow: var(--shadow-wide),
						inset 0px 0px 0px 1px oklch(100% 0 0 / .1);
			overflow: hidden;
			display: flex;
			flex-direction: column;
			padding: 0px;
			
			[data-os="android"] & {
				background: var(--background);
			}
			
			[data-os="windows"] & {
				background: var(--systempanel);
			}
			
			&.hide {
				animation: containerAlertInactive calc(var(--base-time-length) * 1) cubic-bezier(.62,-0.47,1,.56) 1;
			}
			
			& .description {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: calc(var(--base-gap-size) / 2);
				padding: var(--base-gap-size);
				padding-block-end: 0px;
				
				[data-os="windows"] & {
					padding-block-end: var(--base-gap-size);
				}
			}
			
			& p {
				font-size: calc(var(--base-font-size) * 0.8);
				line-height: var(--base-font-size);
				max-height: 20vh;
				overflow: auto;
			}
			
			& button {
				width: 100%;
				
				[data-os="android"] & {
					width: auto;
					background: none;
					color: var(--accent);
					
					&:hover {
						opacity: 0.5;
					}
				}
			}
			
			& .buttons {
				display: flex;
				flex-direction: column;
				gap: calc(var(--base-gap-size) / 2);
				padding: var(--base-gap-size);
				
				[data-os="windows"] & {
					box-shadow: inset 0px 1px 0px 0px oklch(from var(--main) l c h / .1);
					background: oklch(from var(--main) l c h / .05);
				}
				
				@media (pointer: fine) {
					flex-direction: row-reverse;
				}
			}
		}
	
	
	/* TOASTS */
		dialog[data-type="toast"] {
			background: oklch(from var(--systempanel) l c h / .8);
			-webkit-backdrop-filter: var(--material-translucent-large);
			backdrop-filter: var(--material-translucent-large);
			padding: calc(var(--base-gap-size) / 2);
			border-radius: calc(var(--base-radius-size) * 20);
			display: inline-flex;
			align-items: center;
			gap: calc(var(--base-gap-size) / 2);
			color: var(--main);
			font-family: var(--font-regular);
			font-size: calc(var(--base-font-size) * 1);
			pointer-events: all;
			box-shadow: var(--shadow-wide),
						inset 0px 0px 0px 1px oklch(100% 0 0 / .1);
			animation: containerToast calc(var(--base-time-length) * 1) cubic-bezier(.15,.72,.48,1.59) 1;
			border: none;
			margin-block-start: calc(var(--base-gap-size) + env(safe-area-inset-top));
			
			&.hide {
				animation: containerToastInactive calc(var(--base-time-length) * 1) cubic-bezier(.62,-0.47,1,.56) 1;
			}
			
			& svg, 
			& img {
				width: calc(var(--base-font-size) * 1.5);
				height:  calc(var(--base-font-size) * 1.5);
				min-width:  calc(var(--base-font-size) * 1.5);
				min-height:  calc(var(--base-font-size) * 1.5);
			}
			
			& .buttonToastDismiss {
				box-shadow: none;
				
				& path {
					fill: var(--main);
				}
				
				&:hover {
					cursor: pointer;
					opacity: 0.5;
				}
			}
			
			& .buttonToastDismiss, 
			& .buttonToastDismiss svg {
				width: calc(var(--base-font-size) * 1.2);
				height: calc(var(--base-font-size) * 1.2);
				min-width: calc(var(--base-font-size) * 1.2);
				min-height: calc(var(--base-font-size) * 1.2);
			}
		}
		
		.containerToastContents {
			display: flex;
			gap: calc(var(--base-gap-size) / 2);
			align-items: center;
			
			& p {
				margin: 0px;
				padding: 0px;
				display: flex;
				align-items: center;
				gap: calc(var(--base-gap-size) / 4);
			}
			
			& svg path:not(.useInitialFill) {
				fill: var(--accent);
			}
		}

	
	/* LIGHTBOXES */
		dialog[data-type="lightbox"] {
			z-index: 2;
			width: 100%;
			height: 100%;
			display: flex;
			justify-content: center;
			align-items: center;
			background: none;
			border: none !important;
			animation: containerLightbox calc(var(--base-time-length) * 1.5) 1;
			
			&.hide {
				animation: containerLightboxInactive calc(var(--base-time-length) * 1.5) 1;
			}
			
			& img {
				max-width: 100%;
				max-height: 100%;
			}
		}
	
	
	/* WHAT'S NEW SHEET */
		#sheetWhatsNew {
			padding-block-end: env(safe-area-inset-bottom) !important;
			
			& .headerWhatsNew {
				padding: calc(var(--base-gap-size) * 2);
				/* margin-block-end: var(--base-gap-size); */
				display: flex;
				justify-content: center;
				align-items: center;
				flex-direction: column;
				background-image: linear-gradient(
									oklch(from var(--accent) l c h / .3), 
									oklch(from var(--accent) l c h / 0)
								);
				
				@media (prefers-color-scheme: dark) {
					background-image: linear-gradient(
										oklch(from var(--accent) l c h / .15), 
										oklch(from var(--accent) l c h / 0)
									);
				}
			}
			
			& .version {
				border-radius: calc(var(--base-gap-size) * 20);
				background: var(--accent);
				width: calc(var(--base-font-size) * 5);
				height: calc(var(--base-font-size) * 5);
				display: flex;
				justify-content: center;
				align-items: center;
				margin-block-end: var(--base-gap-size);
			}
			
			& h1 {
				color: white !important;
				font-size: 180%;
			}
			
			& li {
				padding: var(--base-gap-size) 0px;
				margin: 0px var(--base-gap-size);
				list-style: none;
				border-block-end: 1px solid var(--divider);
				
				&:first-child {
					padding-block-start: 0px;
				}
				
				&:last-child {
					border: none;
					/* padding-block-end: 0px; */
				}
			}
		}
	
	
	/* HOW TO INSTALL SHEET */
		#containerIntroText {
			margin-inline: calc(var(--base-gap-size) * 2);
			margin-block-start: calc(var(--base-gap-size) * 3);
			margin-block-end: var(--base-gap-size);
			display: flex;
			flex-direction: column;
			align-items: center;
			
			@media (width >= 600px) {
				margin-inline: calc(var(--base-gap-size) * 3);
			}
		}
		
		#containerBrowsersList {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
			gap: var(--base-gap-size);
			
			@media (width >= 600px) {
				padding-inline: calc(var(--base-gap-size) * 2);
				grid-template-columns: repeat(3, 1fr);
			}
			
			& img {
				width: 80%;
				margin-inline: auto;
				display: block;
				transition: var(--base-time-length) scale ease;
			}
			
			& div:hover {
				cursor: pointer;
				
				& img {
					scale: 1.1;
					transition: var(--base-time-length) scale ease;
				}
			}
		}
		
		.leadingText {
			display: flex;
			justify-content: center;
			align-items: center;
			gap: calc(var(--base-gap-size) / 2)
		}
		
		.installShareIcon {
			width: calc(var(--base-font-size) * 1.5);
			height: calc(var(--base-font-size) * 1.5);
			
			& svg  {
				width: calc(var(--base-font-size) * 1.5);
				height: calc(var(--base-font-size) * 1.5);
			}
		}
		
		#buttonOtherBrowsers {
			position: absolute;
			top: calc(var(--base-gap-size) / 1.5);
			left: calc(var(--base-gap-size) / 2);
		}
		
		#sheetInstallContent li {
			margin-block: var(--base-gap-size);
			
			&:first-child {
				margin-block-start: 0px;
			}
			
			&:last-child {
				margin-block-end: 0px;
			}
		}
		
		.containerInstallPanel {
			border: 1px solid var(--divider);
			border-radius: var(--base-radius-size);
			padding: calc(var(--base-gap-size) / 2);
			margin-block-end: var(--base-gap-size);
			position: relative;
			display: flex;
			align-items: center;
			gap: var(--base-gap-size);
			background: var(--foreground);
			
			&:hover {
				opacity: 0.5;
				cursor: pointer;
			}
			
			@media (display-mode: standalone) {
				display: none;
			}
		}
		
		#containerIcon {
			position: relative;
			width: 80px;
			height: 80px;
			
			& img {
				width: 80px;
				height: 80px;
			}
			
			#sheetInstall & {
				width: 160px;
				height: 160px;
				margin-block-end: var(--base-gap-size);
				
				& img {
					width: 160px;
					height: 160px;
				}
			}
			
			& .icon {
				background: var(--positive);
				border-radius: 50%;
				width: 24px;
				height: 24px;
				box-shadow: 0px 0px 0px 3px var(--foreground);
				position: absolute;
				bottom: 5px;
				right: 0px;
				display: flex;
				justify-content: center;
				align-items: center;
				
				#sheetInstall & {
					width: 48px;
					height: 48px;
					box-shadow: 0px 0px 0px 4px var(--foreground);
				}
			}
			
			[data-os="ios"] #sheetInstall & .icon {
				box-shadow: 0px 0px 0px 4px var(--background);
			}
			
			[data-os="windows"] #sheetInstall & .icon {
				box-shadow: 0px 0px 0px 4px var(--systempanel);
			}
			
			& svg {
				width: 18px;
				height: 18px;
				
				#sheetInstall & {
					width: 28px;
					height: 28px;
				}
				
				& path {
					fill: var(--foreground);
					
					[data-os="ios"] & {
						fill: var(--background);
					}
					
					[data-os="windows"] #sheetInstall & {
						fill: var(--systempanel);
					}
				}
			}
		}
	
	
	/* 	DISPLAY OPTIONS */
		.headerDisplayOptions {
			display: flex;
			justify-content: space-between;
			align-items: center;
			
			& p {
				padding-inline-end: calc(var(--base-gap-size) / 2);
			}
		}
	
	
/* CHARTS */
	/* PIE */
		.containerPie {
			position: relative;
			width: 150px;
			height: 150px;
			
			@media (width >= 640px) {
				width: 250px;
				height: 250px;
			}
		}
		
		.pie {
			--w: 150px;
			width: var(--w);
			aspect-ratio: 1;
			display: inline-grid;
			place-content: center;
			margin: 5px;
			font-size: 25px;
			font-weight: bold;
			font-family: sans-serif;
			position: absolute;
			
			@media (width >= 640px) {
				--w: 250px;
			}
			
			&:before{
				content: "";
				position: absolute;
				border-radius: 50%;
				inset: 0;
				background: conic-gradient(var(--accent) calc(var(--p)*1%),#0000 0);
				-webkit-mask:radial-gradient(farthest-side,#0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));
				mask:radial-gradient(farthest-side,#0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));
			}
		}
		
		.containerChartLegend h4 {
			border-block-end: 2px solid var(--divider);
			
			[data-os="android"] & {
				border-block-end: 2px solid oklch(from var(--main) l c h / .1);
			}
		}
		
		.containerColorKey {
			flex-direction: row;
		}
		
		.colorKey {
			width: var(--base-font-size);
			height: var(--base-font-size);
			background: var(--accent);
			border-radius: 50%;
		}
		
		[data-segment="seg1"] { --accent: oklch(67.8% 0.167 20.7); }
		[data-segment="seg2"] { --accent: oklch(81.3% 0.145 68.1); }
		[data-segment="seg3"] { --accent: oklch(88% 0.147 93); }
		[data-segment="seg4"] { --accent: oklch(84.7% 0.136 120); }
		[data-segment="seg5"] { --accent: oklch(73% 0.145 147.7); }
		[data-segment="seg6"] { --accent: oklch(79.1% 0.106 198.4); }
		[data-segment="seg7"] { --accent: oklch(61.5% 0.153 260.2); }
		[data-segment="seg8"] { --accent: oklch(60.9% 0.175 283.7); }
		[data-segment="seg9"] { --accent: oklch(66.2% 0.131 321.6); }
		[data-segment="seg10"] { --accent: oklch(75.8% 0.163 342.5); }
		[data-segment="seg11"] { --accent: oklch(84.4% 0.108 357.8); }
		[data-segment="seg12"] { --accent: oklch(77.2% 0.079 41); }
		[data-segment="seg13"] { --accent: oklch(73% 0.064 298); }
		[data-segment="seg14"] { --accent: oklch(77.3% 0.04 215.6); }
		[data-segment="seg15"] { --accent: oklch(78% 0.058 161.2); }
	
	
	/* GANTT */
		.chartGantt {
			& th {
				align-items: center;
				font-size: calc(var(--base-font-size) * 0.75);
				
				[data-os="android"] & {
					font-family: var(--font-regular-bold);
					font-weight: normal;
				}
				
				[data-os="android"] &, 
				[data-os="windows"] & {
					position: relative;
					
					@media (width >= 1100px) {
						position: sticky;
					}
				}
			}
			
			& tr td:nth-child(1),
			& tr th:nth-child(1) {
				background: var(--background);
				flex-direction: row;
				justify-content: flex-start;
				align-items: center;
				gap: calc(var(--base-gap-size) / 2);
				padding-inline: calc(var(--base-gap-size) / 2);
				border-inline-end: 1px solid var(--divider);
				
				[data-os="ios"] & {
					background: var(--foreground);
				}
				
				[data-os="android"] & {
					border-inline-end: 1px solid oklch(from var(--main) l c h / .1);
					position: sticky;
				}
				
				[data-os="windows"] & {
					position: sticky;
					background: var(--foreground);
				}
				
				.fullWidth & {
					padding-inline-start: max(var(--base-gap-size) / 2, env(safe-area-inset-left));
				}
				
				@media (width >= 1100px) {
					position: sticky;
					left: 0px;
					z-index: 3;
				}
			}
			
			& thead {
				@media (width >= 1100px) {
					position: sticky;
					top: 0px;
					z-index: 4;
					background: var(--foreground);
					
					[data-os="ios"] &, 
					[data-os="android"] &, 
					[data-os="windows"] & {
						background: var(--background);
					}
				}
				
				
			}
			
			& .cellSupport {
				position: relative;
				padding-inline: 0px;
				justify-content: center;
				
				&::after {
					content: '';
					width: 1px;
					height: 100%;
					position: absolute;
					right: 50%;
					background: var(--divider);
					z-index: 1;
					
					[data-os="android"] & {
						background: oklch(from var(--main) l c h / .1);
					}
				}
			}
			
			[data-os="android"] & tr, 
			[data-os="android"] & th {
				border-color: oklch(from var(--main) l c h / .1);
			}
			
			[data-os="android"] & th:not(:first-child)::after {
				content: '';
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0px;
				left: 0px;
				z-index: -1;
			}
			
			[data-os="windows"] & th:not(:first-child)::after {
				content: '';
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0px;
				left: 0px;
				z-index: -1;
			}
			
			& .bar {
				background: var(--accent);
				width: 100%;
				height: var(--base-font-size);
				z-index: 2;
				border: 1px solid var(--accent);
			}
			
			& .single {
				align-items: center;
				
				& .bar {
					border-radius: 40px;
					width: var(--base-font-size);
				}
			}
			
			& .start {
				align-items: flex-end;
				
				& .bar {
					border-radius: 40px 0px 0px 40px;
					width: 50px;
				}
			}
			
			& .end .bar {
				border-radius: 0px 40px 40px 0px;
				width: 50px;
			}
		}
	
	
	/* STATS */
		.chartStats {
			display: flex;
			flex-direction: column;
			gap: calc(var(--base-gap-size) / 2);
			
			&[data-orientation="portrait"] {
				flex-direction: row;
				
				& label {
					display: flex;
					flex-direction: column;
					align-items: center;
				}
			}
			
			& span {
				display: grid;
				grid-template-columns: calc(var(--base-font-size) * 7) 1fr;
				align-items: center;
				
				[data-orientation="portrait"] & {
					width: 100%;
					display: flex;
					flex-direction: column-reverse;
				}
			}
			
			& .textBold {
				margin-inline-end: calc(var(--base-gap-size) / 4);
				
				[data-orientation="landscape"] &::after {
					content: ':';
				}
				
				[data-orientation="portrait"] & {
					margin-inline-end: 0px;
				}
			}
			
			& .track {
				background: oklch(from var(--main) l c h / .05);
				border-radius: calc(var(--base-radius-size) * 20);
				width: 100%;
				height: calc(var(--base-font-size) * 0.8);
				position: relative;
				
				[data-os="android"] & {
					background: oklch(from var(--accent) l c h / .2);
				}
				
				[data-contrast="more"] & {
					box-shadow: 0px 0px 0px 1px var(--divider);
				}
				
				[data-orientation="portrait"] & {
					height: 90px;
					width: 40px;
					border-radius: 4px;
					overflow: hidden;
				}
				
				
			}
			
			& .bar {
				background: var(--accent);
				height: 100%;
				width: var(--stat-bar-length);
				border-radius: calc(var(--base-radius-size) * 20);
				padding: 0px;
				
				[data-orientation="portrait"] & {
					height: var(--stat-bar-length);
					width: 100%;
					border-radius: 0px;
					bottom: 0px;
					position: absolute;
				}
			}
		}
	
	
/* DISPLAY OPTIONS */
	#containerVisuals, 
	#containerText {
		container-type: inline-size;
	}

	.containerDisplayRow {
		padding: calc(var(--base-gap-size) / 2);
		grid-template-columns: 1fr calc(var(--base-font-size) * 3);
		gap: var(--base-gap-size);
		display: var(--layout, flex);
		flex-direction: column;
		margin-block-end: var(--base-gap-size);
		
		[data-os="android"] & {
			padding: var(--base-gap-size);
			grid-template-columns: 1fr calc(var(--base-font-size) * 3.5);
		}
		
		& h3 {
			font-weight: normal;
		}
		
		& p {
			opacity: 0.5;
		}
		
		& .options {
			display: grid;
			grid-template-columns: repeat(auto-fit,minmax(120px,1fr));
			gap: calc(var(--base-gap-size) / 2);
			
			#displayAccent &  {
				display: flex;
				flex-direction: column;
				
				& div {
					display: grid;
					grid-template-columns: repeat(auto-fit,minmax(calc(var(--base-font-size) * 2),1fr));
					gap: calc(var(--base-gap-size) / 4);
					
					& h4 {
						grid-column: 1 / -1;
					}
				}
				
				& button {
					width: calc(var(--base-font-size) * 2);
					height: calc(var(--base-font-size) * 2);
					
					&:not(.picked) svg {
						display: none;
					}
					
					& svg {
						width: var(--base-font-size);
						height: var(--base-font-size);
					}
				}
			}
		}
		
		& .options-row {
			display: grid;
			gap: calc(var(--base-gap-size) / 2);
			
			@container (min-width: 600px) {
				grid-template-columns: 1fr 1fr;
				
				[data-textsize="large"] & {
					grid-template-columns: 1fr;
				}
			}
		}
		
		& .subtext {
			margin-block-start: var(--base-gap-size);
			margin-block-end: 0px;
			color: var(--destructive);
			opacity: 1;
		}
	}

	#pickerFonts {
		& h4 {
			grid-column: 1 / -1;
		}
	}